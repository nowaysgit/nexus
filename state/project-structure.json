{
    "last_updated": "2024-07-31T10:30:00Z",
    "version": "1.0",
    "modules": {
        "auth": {
            "description": "Система аутентификации и авторизации",
            "main_files": [
                "auth.module.ts",
                "auth.service.ts",
                "auth.controller.ts"
            ],
            "dependencies": [
                "user",
                "cache"
            ],
            "exports": [
                "AuthModule",
                "AuthService",
                "JwtStrategy"
            ]
        },
        "character": {
            "description": "Управление ИИ-персонажами и их поведением",
            "main_files": [
                "character.module.ts",
                "character.service.ts",
                "needs.service.ts"
            ],
            "dependencies": [
                "llm",
                "validation",
                "cache"
            ],
            "exports": [
                "CharacterModule",
                "CharacterService",
                "NeedsService"
            ]
        },
        "dialog": {
            "description": "Система диалогов и обработки сообщений",
            "main_files": [
                "dialog.module.ts",
                "dialog.service.ts",
                "message-processing.service.ts"
            ],
            "dependencies": [
                "character",
                "telegram",
                "llm"
            ],
            "exports": [
                "DialogModule",
                "DialogService"
            ]
        },
        "telegram": {
            "description": "Интеграция с Telegram Bot API",
            "main_files": [
                "telegram.module.ts",
                "telegram.service.ts",
                "telegram.controller.ts"
            ],
            "dependencies": [
                "dialog",
                "user",
                "validation"
            ],
            "exports": [
                "TelegramModule",
                "TelegramService"
            ]
        },
        "llm": {
            "description": "Интеграция с языковыми моделями",
            "main_files": [
                "llm.module.ts",
                "llm.service.ts"
            ],
            "dependencies": [
                "prompt-template",
                "cache",
                "logging"
            ],
            "exports": [
                "LLMModule",
                "LLMService"
            ]
        },
        "prompt-template": {
            "description": "Система управления шаблонами промптов",
            "main_files": [
                "prompt-template.module.ts",
                "prompt-template.service.ts"
            ],
            "dependencies": [
                "cache",
                "validation"
            ],
            "exports": [
                "PromptTemplateModule",
                "PromptTemplateService"
            ]
        },
        "user": {
            "description": "Управление пользователями системы",
            "main_files": [
                "user.module.ts",
                "user.service.ts",
                "user.controller.ts"
            ],
            "dependencies": [
                "validation",
                "cache"
            ],
            "exports": [
                "UserModule",
                "UserService"
            ]
        },
        "validation": {
            "description": "Централизованная валидация данных",
            "main_files": [
                "validation.module.ts",
                "validation.service.ts"
            ],
            "dependencies": [
                "logging"
            ],
            "exports": [
                "ValidationModule",
                "ValidationService"
            ]
        },
        "story": {
            "description": "Система управления сюжетом и нарративом",
            "main_files": [
                "story.module.ts",
                "story.service.ts"
            ],
            "dependencies": [
                "character",
                "validation"
            ],
            "exports": [
                "StoryModule",
                "StoryService"
            ]
        },
        "logging": {
            "description": "Централизованное логирование",
            "main_files": [
                "log.service.ts"
            ],
            "dependencies": [],
            "exports": [
                "LogService"
            ]
        },
        "cache": {
            "description": "Система кэширования",
            "main_files": [
                "cache.module.ts",
                "cache.service.ts"
            ],
            "dependencies": [],
            "exports": [
                "CacheModule",
                "CacheService"
            ]
        },
        "message-queue": {
            "description": "Асинхронная обработка сообщений",
            "main_files": [
                "message-queue.module.ts",
                "message-queue.service.ts"
            ],
            "dependencies": [
                "logging"
            ],
            "exports": [
                "MessageQueueModule",
                "MessageQueueService"
            ]
        },
        "monitoring": {
            "description": "Мониторинг системы и метрики",
            "main_files": [
                "monitoring.module.ts",
                "monitoring.service.ts"
            ],
            "dependencies": [
                "logging"
            ],
            "exports": [
                "MonitoringModule",
                "MonitoringService"
            ]
        },
        "common": {
            "description": "Общие утилиты и компоненты",
            "main_files": [
                "error-handling.service.ts",
                "config.service.ts"
            ],
            "dependencies": [
                "logging"
            ],
            "exports": [
                "ErrorHandlingService",
                "ConfigService"
            ]
        }
    },
    "files": {
        "package.json": "Зависимости и скрипты Node.js проекта",
        "README.md": "Документация проекта и инструкции по запуску",
        "docker-compose.yml": "Конфигурация Docker Compose для development",
        "docker-compose.test.yml": "Конфигурация Docker Compose для тестового окружения",
        "docker-compose.prod.yml": "Конфигурация Docker Compose для production",
        "Dockerfile": "Инструкции для сборки Docker образа приложения",
        "eslint.config.mjs": "Конфигурация ESLint для проверки качества кода",
        "jest.combined.config.js": "Объединенная конфигурация Jest для всех типов тестов",
        "jest.config.js": "Основная конфигурация Jest для unit тестов",
        "jest.integration.config.js": "Конфигурация Jest для интеграционных тестов",
        "nest-cli.json": "Конфигурация NestJS CLI",
        "tsconfig.json": "Конфигурация TypeScript компилятора",
        "tsconfig.build.json": "Конфигурация TypeScript для сборки продакшен",
        "src/main.ts": "Точка входа приложения с настройкой NestJS",
        "src/app.module.ts": "Главный модуль приложения со всеми импортами",
        "src/auth/auth.module.ts": "Модуль аутентификации с настройкой JWT стратегии",
        "src/auth/controllers/auth.controller.ts": "REST API endpoints для login/logout операций",
        "src/auth/services/auth.service.ts": "Сервис для валидации пользователей и генерации токенов",
        "src/auth/strategies/jwt.strategy.ts": "JWT стратегия для аутентификации",
        "src/auth/dto/login.dto.ts": "DTO для запроса аутентификации",
        "src/auth/dto/register.dto.ts": "DTO для регистрации пользователя",
        "src/auth/interfaces/jwt-payload.interface.ts": "Интерфейс JWT payload",
        "src/auth/jwt-auth.guard.ts": "Guard для защиты endpoint-ов JWT токенами",
        "src/auth/user.decorator.ts": "Декоратор для извлечения пользователя из запроса",
        "src/cache/cache.module.ts": "Модуль кэширования с Redis интеграцией",
        "src/cache/cache.service.ts": "Централизованный сервис кэширования с Redis backend",
        "src/cache/cache.interface.ts": "Интерфейс для операций кэширования",
        "src/cache/cache.service.test.ts": "Unit тесты для кэш сервиса",
        "src/cache/index.ts": "Экспорты модуля кэширования",
        "src/character/character.module.ts": "Основной модуль управления персонажами",
        "src/character/context-compression.module.ts": "Модуль сжатия контекста диалогов",
        "src/character/message-processing.module.ts": "Модуль обработки входящих сообщений",
        "src/character/story.module.ts": "Модуль управления сюжетом персонажей",
        "src/character/controllers/character.controller.ts": "REST API для управления персонажами",
        "src/character/controllers/emotional-state.controller.ts": "API для управления эмоциональным состоянием",
        "src/character/controllers/specialization.controller.ts": "API для управления специализациями",
        "src/character/controllers/story.controller.ts": "API для управления сюжетом",
        "src/character/controllers/technique-analytics.controller.ts": "API аналитики техник манипуляции",
        "src/character/services/core/character.service.ts": "Основной сервис управления персонажами",
        "src/character/services/core/character-management.service.ts": "Сервис менеджмента жизненного цикла персонажей",
        "src/character/services/core/character-monitoring.service.ts": "Сервис мониторинга состояния персонажей",
        "src/character/services/core/character-response.service.ts": "Сервис генерации ответов персонажей",
        "src/character/services/core/character-scheduler.service.ts": "Планировщик действий персонажей",
        "src/character/services/core/emotional-state.service.ts": "Управление эмоциональным состоянием",
        "src/character/services/core/memory.service.ts": "Управление памятью персонажей",
        "src/character/services/core/message-processing-coordinator.service.ts": "Координатор обработки сообщений",
        "src/character/services/core/motivation.service.ts": "Управление мотивацией персонажей",
        "src/character/services/core/needs.service.ts": "Система потребностей и мотиваций",
        "src/character/services/core/specialization.service.ts": "Управление специализациями персонажей",
        "src/character/services/core/story.service.ts": "Управление сюжетом и нарративом",
        "src/character/services/action/action-executor.service.ts": "Исполнитель действий персонажей",
        "src/character/services/action/action-generator.service.ts": "Генератор действий персонажей",
        "src/character/services/action/action-lifecycle.service.ts": "Управление жизненным циклом действий",
        "src/character/services/action/action-resource.service.ts": "Управление ресурсами для действий",
        "src/character/services/action/action-scheduler.service.ts": "Планировщик действий персонажей",
        "src/character/services/analysis/context-analyzer.service.ts": "Анализ контекста диалогов",
        "src/character/services/analysis/context-compression.service.ts": "Сжатие контекста для оптимизации",
        "src/character/services/analysis/message-analysis.service.ts": "Анализ входящих сообщений",
        "src/character/services/behavior/behavior-pattern.service.ts": "Управление паттернами поведения",
        "src/character/services/behavior/character-behavior.service.ts": "Основной сервис поведения персонажей",
        "src/character/services/behavior/emotional-behavior.service.ts": "Эмоциональные аспекты поведения",
        "src/character/services/behavior/frustration-management.service.ts": "Управление фрустрацией персонажей",
        "src/character/services/behavior/message-behavior.service.ts": "Поведенческие паттерны в сообщениях",
        "src/character/services/manipulation/manipulation.service.ts": "Сервис техник манипуляции",
        "src/character/services/technique/technique-executor.service.ts": "Исполнитель техник воздействия",
        "src/character/services/technique/technique-history.service.ts": "История применения техник",
        "src/character/services/technique/technique-strategy.service.ts": "Стратегии применения техник",
        "src/character/entities/character.entity.ts": "Основная сущность персонажа",
        "src/character/entities/action.entity.ts": "Сущность действия персонажа",
        "src/character/entities/character-memory.entity.ts": "Сущность памяти персонажа",
        "src/character/entities/character-motivation.entity.ts": "Сущность мотивации персонажа",
        "src/character/entities/emotional-state.ts": "Сущность эмоционального состояния",
        "src/character/entities/manipulation-technique.entity.ts": "Сущность техники манипуляции",
        "src/character/entities/need.entity.ts": "Сущность потребности персонажа",
        "src/character/entities/story-event.entity.ts": "Сущность события в сюжете",
        "src/character/entities/story-plan.entity.ts": "Сущность плана сюжета",
        "src/character/repositories/character.repository.ts": "Репозиторий для работы с персонажами",
        "src/character/repositories/technique-execution.repository.ts": "Репозиторий исполнения техник",
        "src/character/repositories/user-manipulation-profile.repository.ts": "Репозиторий профилей манипуляции",
        "src/character/dto/create-character.dto.ts": "DTO создания персонажа",
        "src/character/dto/update-character.dto.ts": "DTO обновления персонажа",
        "src/character/dto/update-needs.dto.ts": "DTO обновления потребностей",
        "src/character/dto/index.ts": "Экспорты DTO персонажей",
        "src/character/enums/action-type.enum.ts": "Перечисление типов действий",
        "src/character/enums/character-archetype.enum.ts": "Перечисление архетипов персонажей",
        "src/character/enums/character-need-type.enum.ts": "Перечисление типов потребностей",
        "src/character/enums/technique.enums.ts": "Перечисления техник воздействия",
        "src/character/interfaces/analysis.interfaces.ts": "Интерфейсы анализа",
        "src/character/interfaces/behavior.interfaces.ts": "Интерфейсы поведения",
        "src/character/interfaces/character-persona.interface.ts": "Интерфейс персоны персонажа",
        "src/character/interfaces/core.interfaces.ts": "Основные интерфейсы персонажей",
        "src/character/interfaces/IEmotionalStateService.ts": "Интерфейс сервиса эмоций",
        "src/character/interfaces/index.ts": "Экспорты интерфейсов",
        "src/character/interfaces/memory.interfaces.ts": "Интерфейсы памяти",
        "src/character/interfaces/needs.interfaces.ts": "Интерфейсы потребностей",
        "src/character/interfaces/technique.interfaces.ts": "Интерфейсы техник",
        "src/character/config/needs-impact-rules.config.ts": "Конфигурация правил влияния потребностей",
        "src/common/common.module.ts": "Модуль общих компонентов и утилит",
        "src/common/index.ts": "Экспорты общих компонентов",
        "src/common/abstractions/entity-manager.abstract.ts": "Абстрактный менеджер сущностей",
        "src/common/abstractions/pattern-utils.ts": "Утилиты для работы с паттернами",
        "src/common/base/base.service.ts": "Базовый сервис с общей функциональностью",
        "src/common/config/cache.config.ts": "Конфигурация кэширования",
        "src/common/config/configuration.ts": "Основная конфигурация приложения",
        "src/common/config/index.ts": "Экспорты конфигурации",
        "src/common/config/test.configuration.ts": "Конфигурация для тестирования",
        "src/common/config/validation.schema.ts": "Схема валидации конфигурации",
        "src/common/constants/injection-tokens.ts": "Токены для dependency injection",
        "src/common/controllers/api.controller.ts": "Базовый API контроллер",
        "src/common/decorators/retry.decorator.ts": "Декоратор для повторных попыток",
        "src/common/decorators/sanitize.decorator.ts": "Декоратор для санитизации данных",
        "src/common/decorators/validation-rule.decorator.ts": "Декоратор валидационных правил",
        "src/common/guards/api-key.guard.ts": "Guard для проверки API ключей",
        "src/common/guards/guards.module.ts": "Модуль guard-ов безопасности",
        "src/common/guards/public.decorator.ts": "Декоратор для публичных endpoint-ов",
        "src/common/guards/rate-limit.guard.ts": "Guard для ограничения частоты запросов",
        "src/common/guards/role.guard.ts": "Guard для проверки ролей пользователей",
        "src/common/http/error-handled-http.client.ts": "HTTP клиент с обработкой ошибок",
        "src/common/http/http-client.module.ts": "Модуль HTTP клиента",
        "src/common/interceptors/sanitize-request.interceptor.ts": "Интерцептор санитизации запросов",
        "src/common/interfaces/api-key.interface.ts": "Интерфейс API ключей",
        "src/common/interfaces/domain.interface.ts": "Доменные интерфейсы",
        "src/common/interfaces/error-handler.interface.ts": "Интерфейс обработчика ошибок",
        "src/common/interfaces/index.ts": "Экспорты интерфейсов",
        "src/common/interfaces/llm-provider.interface.ts": "Интерфейс провайдера LLM",
        "src/common/interfaces/logger.interface.ts": "Интерфейс логгера",
        "src/common/interfaces/message-processor.interface.ts": "Интерфейс процессора сообщений",
        "src/common/interfaces/message-validation.interface.ts": "Интерфейс валидации сообщений",
        "src/common/interfaces/messaging.interface.ts": "Интерфейсы мессенджинга",
        "src/common/interfaces/module.interface.ts": "Интерфейсы модулей",
        "src/common/interfaces/openai-types.interface.ts": "Интерфейсы типов OpenAI",
        "src/common/interfaces/prompt-template.interface.ts": "Интерфейс шаблонов промптов",
        "src/common/interfaces/validation.interface.ts": "Интерфейсы валидации",
        "src/common/middleware/api-key.middleware.ts": "Middleware для проверки API ключей",
        "src/common/middleware/index.ts": "Экспорты middleware",
        "src/common/middleware/request-tracker.middleware.ts": "Middleware отслеживания запросов",
        "src/common/types/common-types.ts": "Общие типы TypeScript",
        "src/common/utils/cors-validator.util.ts": "Утилита валидации CORS",
        "src/common/utils/database.module.ts": "Модуль подключения к базе данных",
        "src/common/utils/error.utils.ts": "Утилиты обработки ошибок",
        "src/common/utils/header-sanitizer.util.ts": "Утилита санитизации заголовков",
        "src/common/utils/port-validator.util.ts": "Утилита валидации портов",
        "src/common/utils/db/db-connection-handler.service.ts": "Сервис управления подключениями к БД",
        "src/common/utils/db/db-events-handler.service.ts": "Обработчик событий базы данных",
        "src/common/utils/error-handling/error-handling.module.ts": "Модуль обработки ошибок",
        "src/common/utils/error-handling/error-handling.service.ts": "Централизованный сервис обработки ошибок",
        "src/common/utils/error-handling/error-handling.utils.ts": "Утилиты обработки ошибок",
        "src/common/utils/error-handling/index.ts": "Экспорты обработки ошибок",
        "src/common/utils/query/query.utils.ts": "Утилиты работы с запросами",
        "src/dialog/dialog.module.ts": "Модуль системы диалогов",
        "src/dialog/controllers/dialog.controller.ts": "REST API для управления диалогами",
        "src/dialog/services/dialog.service.ts": "Основной сервис диалогов",
        "src/dialog/entities/dialog.entity.ts": "Сущность диалога",
        "src/dialog/entities/message.entity.ts": "Сущность сообщения",
        "src/dialog/dto/create-message.dto.ts": "DTO создания сообщения",
        "src/dialog/dto/create-proactive-message.dto.ts": "DTO создания проактивного сообщения",
        "src/dialog/dto/index.ts": "Экспорты DTO диалогов",
        "src/dialog/interfaces/create-dialog.interface.ts": "Интерфейс создания диалога",
        "src/infrastructure/infrastructure.module.ts": "Модуль инфраструктурных сервисов",
        "src/infrastructure/api-key.service.ts": "Сервис управления API ключами",
        "src/infrastructure/encryption.service.ts": "Сервис шифрования данных",
        "src/llm/llm.module.ts": "Модуль интеграции с языковыми моделями",
        "src/llm/services/llm.service.ts": "Основной сервис работы с LLM",
        "src/llm/services/llm-provider-manager.service.ts": "Менеджер провайдеров LLM",
        "src/llm/providers/llama-provider.service.ts": "Провайдер для Llama моделей",
        "src/llm/providers/openai-core.service.ts": "Основной сервис OpenAI",
        "src/llm/providers/openai.provider.service.ts": "Провайдер OpenAI API",
        "src/logging/logging.module.ts": "Модуль логирования",
        "src/logging/log.service.ts": "Централизованный сервис логирования",
        "src/logging/rollbar.service.ts": "Интеграция с Rollbar для мониторинга ошибок",
        "src/logging/global-exception.filter.ts": "Глобальный фильтр исключений",
        "src/logging/http-logger.middleware.ts": "Middleware логирования HTTP запросов",
        "src/logging/index.ts": "Экспорты модуля логирования",
        "src/message-queue/message-queue.module.ts": "Модуль очереди сообщений",
        "src/message-queue/message-queue.service.ts": "Сервис асинхронной обработки сообщений",
        "src/monitoring/monitoring.module.ts": "Модуль мониторинга системы",
        "src/monitoring/monitoring.service.ts": "Основной сервис мониторинга",
        "src/monitoring/controllers/monitoring.controller.ts": "API эндпоинты мониторинга",
        "src/monitoring/controllers/optimizer.controller.ts": "API оптимизации производительности",
        "src/monitoring/services/alert.service.ts": "Сервис системы оповещений",
        "src/monitoring/services/optimization.service.ts": "Сервис оптимизации производительности",
        "src/monitoring/entities/alert.entity.ts": "Сущность оповещения",
        "src/monitoring/entities/api-metric.entity.ts": "Сущность метрики API",
        "src/monitoring/entities/metric-aggregation.entity.ts": "Сущность агрегации метрик",
        "src/monitoring/entities/metric-base.entity.ts": "Базовая сущность метрики",
        "src/monitoring/entities/optimizer-recommendation.entity.ts": "Сущность рекомендации оптимизатора",
        "src/monitoring/entities/scaling-operation.entity.ts": "Сущность операции масштабирования",
        "src/monitoring/entities/scaling-rule.entity.ts": "Сущность правила масштабирования",
        "src/monitoring/entities/system-metric.entity.ts": "Сущность системной метрики",
        "src/monitoring/entities/user-metric.entity.ts": "Сущность пользовательской метрики",
        "src/monitoring/enums/health-status.enum.ts": "Перечисление статусов здоровья системы",
        "src/monitoring/guards/prometheus-auth.guard.ts": "Guard аутентификации Prometheus",
        "src/monitoring/middleware/metrics.middleware.ts": "Middleware сбора метрик",
        "src/monitoring/grafana/alert-rules.yaml": "Правила оповещений Grafana",
        "src/monitoring/grafana/database-dashboard.json": "Dashboard базы данных",
        "src/monitoring/grafana/database-optimizer-dashboard.json": "Dashboard оптимизатора БД",
        "src/monitoring/grafana/health-system-dashboard.json": "Dashboard здоровья системы",
        "src/monitoring/grafana/README.md": "Документация настройки Grafana",
        "src/monitoring/grafana/redis-cache-dashboard.json": "Dashboard Redis кэша",
        "src/monitoring/grafana/scaling-dashboard.json": "Dashboard масштабирования",
        "src/monitoring/grafana/system-performance-dashboard.json": "Dashboard производительности",
        "src/monitoring/grafana/user-activity-dashboard.json": "Dashboard активности пользователей",
        "src/prompt-template/prompt-template.module.ts": "Модуль шаблонов промптов",
        "src/prompt-template/prompt-template.service.ts": "Сервис управления шаблонами промптов",
        "src/story/story.module.ts": "Модуль системы сюжета",
        "src/story/entities/character-story-progress.entity.ts": "Сущность прогресса персонажа в сюжете",
        "src/story/entities/story-event.entity.ts": "Сущность события сюжета",
        "src/story/services/story.service.ts": "Основной сервис управления сюжетом",
        "src/story/services/story-automation.service.ts": "Сервис автоматизации сюжета",
        "src/story/services/story-seeder.service.ts": "Сервис наполнения сюжета данными",
        "src/telegram/telegram.module.ts": "Модуль интеграции с Telegram",
        "src/telegram/telegram.service.ts": "Основной сервис Telegram бота",
        "src/telegram/telegram.update.ts": "Обработчик обновлений Telegram",
        "src/telegram/constants/index.ts": "Экспорты констант Telegram",
        "src/telegram/constants/states.ts": "Константы состояний Telegram бота",
        "src/telegram/constants/tokens.ts": "Токены dependency injection",
        "src/telegram/decorators/access-check.decorator.ts": "Декоратор проверки доступа",
        "src/telegram/decorators/error-handling.decorator.ts": "Декоратор обработки ошибок",
        "src/telegram/decorators/index.ts": "Экспорты декораторов",
        "src/telegram/decorators/inject-bot.decorator.ts": "Декоратор инъекции бота",
        "src/telegram/decorators/measure-execution.decorator.ts": "Декоратор измерения времени выполнения",
        "src/telegram/decorators/telegram.decorators.ts": "Основные декораторы Telegram",
        "src/telegram/entities/character-settings.entity.ts": "Сущность настроек персонажа",
        "src/telegram/handlers/base.handler.ts": "Базовый обработчик Telegram",
        "src/telegram/handlers/callback.handler.ts": "Обработчик callback запросов",
        "src/telegram/handlers/command.handler.ts": "Обработчик команд бота",
        "src/telegram/handlers/message.handler.ts": "Обработчик сообщений",
        "src/telegram/interfaces/character-settings.interface.ts": "Интерфейс настроек персонажа",
        "src/telegram/interfaces/context.interface.ts": "Интерфейс контекста Telegram",
        "src/telegram/interfaces/telegram.interfaces.ts": "Основные интерфейсы Telegram",
        "src/telegram/providers/telegram-bot.provider.ts": "Провайдер экземпляра Telegram бота",
        "src/telegram/services/access-control.service.ts": "Сервис контроля доступа",
        "src/telegram/services/character-creation.service.ts": "Сервис создания персонажей",
        "src/telegram/services/keyboard-formatter.service.ts": "Сервис форматирования клавиатур",
        "src/telegram/services/message-formatter.service.ts": "Сервис форматирования сообщений",
        "src/telegram/services/message.service.ts": "Сервис обработки сообщений",
        "src/telegram/services/telegram-core.service.ts": "Основной сервис Telegram функциональности",
        "src/telegram/services/telegram-initialization.service.ts": "Сервис инициализации Telegram бота",
        "src/telegram/services/telegram-user.service.ts": "Сервис управления пользователями Telegram",
        "src/user/user.module.ts": "Модуль управления пользователями",
        "src/user/user.controller.ts": "REST API для управления пользователями",
        "src/user/services/user.service.ts": "Основной сервис пользователей",
        "src/user/entities/user.entity.ts": "Сущность пользователя",
        "src/user/entities/access-key.entity.ts": "Сущность ключа доступа",
        "src/user/entities/psychological-test.entity.ts": "Сущность психологического теста",
        "src/user/dto/create-user.dto.ts": "DTO создания пользователя",
        "src/user/dto/update-user.dto.ts": "DTO обновления пользователя",
        "src/validation/validation.module.ts": "Модуль централизованной валидации",
        "src/validation/index.ts": "Экспорты модуля валидации",
        "src/validation/pipes/global-validation.pipe.ts": "Глобальный pipe валидации",
        "src/validation/rules/standard-rules.ts": "Стандартные правила валидации",
        "src/validation/services/validation.service.ts": "Основной сервис валидации",
        "src/validation/services/validation-error-handler.service.ts": "Сервис обработки ошибок валидации",
        "src/validation/transformers/message-transformers.ts": "Трансформеры сообщений",
        "lib/tester/index.ts": "Основная библиотека тестирования",
        "lib/tester/entities.ts": "Тестовые сущности",
        "lib/tester/test-suite.ts": "Набор утилит для создания тестов",
        "lib/tester/fixtures/fixture-manager.ts": "Менеджер тестовых фикстур",
        "lib/tester/fixtures/index.ts": "Экспорты фикстур",
        "lib/tester/mocks/config.service.mock.ts": "Мок конфигурационного сервиса",
        "lib/tester/mocks/event-emitter.mock.ts": "Мок эмиттера событий",
        "lib/tester/mocks/index.ts": "Экспорты моков",
        "lib/tester/mocks/jest.mocks.ts": "Основные моки Jest",
        "lib/tester/mocks/llama-provider.mock.ts": "Мок провайдера Llama",
        "lib/tester/mocks/llm.service.mock.ts": "Мок сервиса LLM",
        "lib/tester/mocks/log.service.mock.ts": "Мок сервиса логирования",
        "lib/tester/mocks/memory-service.mock.ts": "Мок сервиса памяти",
        "lib/tester/mocks/mock-dataSource-integration.ts": "Мок источника данных для интеграционных тестов",
        "lib/tester/mocks/mock-dialog-repository.module.ts": "Мок модуля репозитория диалогов",
        "lib/tester/mocks/mock-infrastructure.module.ts": "Мок инфраструктурного модуля",
        "lib/tester/mocks/mock-logging.module.ts": "Мок модуля логирования",
        "lib/tester/mocks/mock-monitoring.module.ts": "Мок модуля мониторинга",
        "lib/tester/mocks/mock-provider.ts": "Базовый мок провайдер",
        "lib/tester/mocks/mock-telegram.module.ts": "Мок модуля Telegram",
        "lib/tester/mocks/mock-typeorm.module.ts": "Мок модуля TypeORM",
        "lib/tester/mocks/needs-service.mock.ts": "Мок сервиса потребностей",
        "lib/tester/mocks/rollbar.service.mock.ts": "Мок сервиса Rollbar",
        "lib/tester/mocks/telegraf-token.module.ts": "Мок модуля токена Telegraf",
        "lib/tester/mocks/telegraf-token.provider.ts": "Мок провайдера токена Telegraf",
        "lib/tester/mocks/telegram-service.mock.ts": "Мок сервиса Telegram",
        "lib/tester/mocks/user-service.mock.ts": "Мок сервиса пользователей",
        "lib/tester/templates/integration-test-template.ts": "Шаблон интеграционного теста",
        "lib/tester/test-configurations/dialog-test.config.ts": "Конфигурация тестов диалогов",
        "lib/tester/test-configurations/dialog-test.configuration.ts": "Детальная конфигурация тестов диалогов",
        "lib/tester/test-configurations/index.ts": "Экспорты тестовых конфигураций",
        "lib/tester/test-configurations/llm-test.configuration.ts": "Конфигурация тестов LLM",
        "lib/tester/test-configurations/logging-test.configuration.ts": "Конфигурация тестов логирования",
        "lib/tester/test-configurations/telegram-test.config.ts": "Конфигурация тестов Telegram",
        "lib/tester/test-configurations/telegram-test.configuration.ts": "Детальная конфигурация тестов Telegram",
        "lib/tester/utils/data-source.ts": "Утилиты источника данных для тестов",
        "lib/tester/utils/db-cleanup.ts": "Утилиты очистки базы данных",
        "lib/tester/utils/db-compatibility.ts": "Утилиты совместимости БД",
        "lib/tester/utils/db-connection-checker.ts": "Проверка подключения к БД",
        "lib/tester/utils/db-connection-handler.ts": "Обработчик подключений к БД",
        "lib/tester/utils/db-connection-manager.ts": "Менеджер подключений к БД",
        "lib/tester/utils/db-optimization.ts": "Оптимизация БД для тестов",
        "lib/tester/utils/id-converter.ts": "Конвертер идентификаторов",
        "lib/tester/utils/index.ts": "Экспорты утилит тестирования",
        "lib/tester/utils/mock-data-source.ts": "Мок источника данных",
        "lib/tester/utils/test-entities.ts": "Тестовые сущности",
        "lib/tester/utils/test-functions.ts": "Утилиты тестовых функций",
        "lib/tester/utils/test-module-builder.ts": "Построитель тестовых модулей",
        "scripts/analyze-test-performance.js": "Скрипт анализа производительности тестов",
        "scripts/cursor-auto-resume.js": "Скрипт автоматического возобновления Cursor",
        "scripts/init-test-db.sql": "SQL скрипт инициализации тестовой БД",
        "scripts/send_telegram_message.sh": "Скрипт отправки сообщений в Telegram",
        "scripts/vscode-auto-resume.js": "Скрипт автоматического возобновления VSCode",
        "state/agent-tasks.json": "Файл задач автономного агента",
        "state/knowledge-base.json": "База знаний агента",
        "state/project-structure.json": "Текущая структура проекта",
        "state/quality-metrics.json": "Метрики качества проекта",
        "state/technical-specification.md": "Техническое задание проекта",
        "state/project-structure.old.json": "Устаревшая структура проекта (архив)",
        "test/setup.ts": "Глобальная настройка тестового окружения",
        "test/setup-integration.ts": "Настройка интеграционного тестового окружения",
        "test/auth/auth.service.integration.test.ts": "Интеграционные тесты сервиса аутентификации",
        "test/cache/cache.service.comprehensive.test.ts": "Комплексные тесты кэш сервиса",
        "test/cache/cache.service.integration.test.ts": "Интеграционные тесты кэш сервиса",
        "test/character/action.service.integration.test.ts": "Интеграционные тесты сервиса действий",
        "test/character/context-compression.service.test.ts": "Тесты сервиса сжатия контекста",
        "test/character/controllers/emotional-state.controller.test.ts": "Тесты контроллера эмоционального состояния",
        "test/character/manipulation.service.integration.test.ts": "Интеграционные тесты сервиса манипуляций",
        "test/character/memory.service.test.ts": "Тесты сервиса памяти персонажей",
        "test/character/needs.service.integration.test.ts": "Интеграционные тесты сервиса потребностей",
        "test/character/services/action-executor.service.test.ts": "Тесты исполнителя действий",
        "test/character/services/action-generator.service.test.ts": "Тесты генератора действий",
        "test/character/services/action-lifecycle.service.test.ts": "Тесты жизненного цикла действий",
        "test/character/services/action-resource.service.test.ts": "Тесты ресурсов действий",
        "test/character/services/action-scheduler.service.test.ts": "Тесты планировщика действий",
        "test/character/services/behavior/message-behavior.service.test.ts": "Тесты поведения в сообщениях",
        "test/character/services/behavior-pattern.service.test.ts": "Тесты паттернов поведения",
        "test/character/services/character-behavior.service.test.ts": "Тесты поведения персонажей",
        "test/character/services/character-management.service.test.ts": "Тесты управления персонажами",
        "test/character/services/character-monitoring.service.test.ts": "Тесты мониторинга персонажей",
        "test/character/services/character-response.service.test.ts": "Тесты ответов персонажей",
        "test/character/services/core/character-response.service.test.ts": "Основные тесты ответов персонажей",
        "test/character/services/core/character-response.simple.test.ts": "Простые тесты ответов персонажей",
        "test/character/services/core/emotional-state.basic.test.ts": "Базовые тесты эмоционального состояния",
        "test/character/services/core/emotional-state.service.test.ts": "Тесты сервиса эмоционального состояния",
        "test/character/services/core/emotional-state.simple.test.ts": "Простые тесты эмоционального состояния",
        "test/character/services/core/motivation.service.test.ts": "Тесты сервиса мотивации",
        "test/character/services/core/story.service.test.ts": "Тесты сервиса сюжета",
        "test/character/services/emotional-behavior.service.test.ts": "Тесты эмоционального поведения",
        "test/character/services/emotional-state.service.test.ts": "Тесты эмоционального состояния",
        "test/character/services/frustration-management.service.test.ts": "Тесты управления фрустрацией",
        "test/character/services/manipulation.service.test.ts": "Тесты сервиса манипуляций",
        "test/character/services/message-analysis.service.test.ts": "Тесты анализа сообщений",
        "test/character/services/message-processing-coordinator.service.test.ts": "Тесты координатора обработки сообщений",
        "test/character/services/needs.service.test.ts": "Тесты сервиса потребностей",
        "test/character/services/specialization.service.test.ts": "Тесты сервиса специализаций",
        "test/character/services/technique-executor.service.test.ts": "Тесты исполнителя техник",
        "test/character/services/technique-history.service.test.ts": "Тесты истории техник",
        "test/character/services/technique-strategy.service.test.ts": "Тесты стратегий техник",
        "test/common/abstractions/pattern-utils.test.ts": "Тесты утилит паттернов",
        "test/common/base/base.service.test.ts": "Тесты базового сервиса",
        "test/common/decorators/retry.decorator.test.ts": "Тесты декоратора повторов",
        "test/common/decorators/sanitize.decorator.test.ts": "Тесты декоратора санитизации",
        "test/common/decorators/validation-rule.decorator.test.ts": "Тесты декоратора валидации",
        "test/common/error-handling.service.advanced.test.ts": "Продвинутые тесты обработки ошибок",
        "test/common/error-handling.service.fixed.test.ts": "Исправленные тесты обработки ошибок",
        "test/common/error-handling.service.integration.test.ts": "Интеграционные тесты обработки ошибок",
        "test/common/error-handling.service.unit.test.ts": "Unit тесты обработки ошибок",
        "test/common/interceptors/sanitize-request.interceptor.test.ts": "Тесты интерцептора санитизации",
        "test/common/test-configurations.test.ts": "Тесты конфигураций тестирования",
        "test/common/utils/error-handling.service.test.ts": "Тесты утилит обработки ошибок",
        "test/common/utils/error.utils.test.ts": "Тесты утилит ошибок",
        "test/common/utils/header-sanitizer.util.test.ts": "Тесты санитизации заголовков",
        "test/common/utils/port-validator.util.test.ts": "Тесты валидации портов",
        "test/dialog/dialog.service.fix.integration.test.ts": "Исправленные интеграционные тесты диалогов",
        "test/dialog/services/dialog.service.test.ts": "Тесты сервиса диалогов",
        "test/examples/logging-mocks-example.test.ts": "Примеры моков логирования",
        "test/examples/telegram-token-usage.example.ts": "Пример использования токена Telegram",
        "test/fixtures/batch-data-creation.test.ts": "Тесты массового создания данных",
        "test/fixtures/fixture-manager-optimization.test.ts": "Тесты оптимизации менеджера фикстур",
        "test/infrastructure/api-key.service.test.ts": "Тесты сервиса API ключей",
        "test/infrastructure/encryption.service.test.ts": "Тесты сервиса шифрования",
        "test/infrastructure/infrastructure.integration.test.ts": "Интеграционные тесты инфраструктуры",
        "test/integration/character-service.integration.test.ts": "Интеграционные тесты сервиса персонажей",
        "test/integration/id-types-compatibility.integration.test.ts": "Тесты совместимости типов ID",
        "test/integration/manipulation-techniques-workflow.integration.test.ts": "Интеграционные тесты workflow техник манипуляции",
        "test/integration/needs-motivation-workflow.integration.test.ts": "Интеграционные тесты workflow потребностей и мотивации",
        "test/lib/tester/test-configurations/index.test.ts": "Тесты конфигураций тестирования библиотеки",
        "test/llm/llama-provider.service.test.ts": "Тесты провайдера Llama",
        "test/llm/llm-provider-manager.service.test.ts": "Тесты менеджера провайдеров LLM",
        "test/llm/llm.service.test.ts": "Тесты сервиса LLM",
        "test/llm/openai-core.service.test.ts": "Тесты основного сервиса OpenAI",
        "test/llm/openai-provider.service.test.ts": "Тесты провайдера OpenAI",
        "test/logging/log.service.integration.test.ts": "Интеграционные тесты сервиса логирования",
        "test/message-queue/message-queue.service.integration.test.ts": "Интеграционные тесты очереди сообщений",
        "test/monitoring/monitoring.service.integration.test.ts": "Интеграционные тесты мониторинга",
        "test/prompt-template/prompt-template.service.test.ts": "Тесты сервиса шаблонов промптов",
        "test/story/story-automation.service.test.ts": "Тесты автоматизации сюжета",
        "test/story/story.service.test.ts": "Тесты сервиса сюжета",
        "test/story/story-system.unit.test.ts": "Unit тесты системы сюжета",
        "test/telegram/handlers/callback.handler.test.ts": "Тесты обработчика callback",
        "test/telegram/handlers/command.handler.test.ts": "Тесты обработчика команд",
        "test/telegram/handlers/message.handler.test.ts": "Тесты обработчика сообщений",
        "test/telegram/message.service.test.ts": "Тесты сервиса сообщений Telegram",
        "test/telegram/services/access-control.service.test.ts": "Тесты сервиса контроля доступа",
        "test/telegram/services/character-creation.service.test.ts": "Тесты сервиса создания персонажей",
        "test/telegram/services/keyboard-formatter.service.test.ts": "Тесты форматировщика клавиатур",
        "test/telegram/services/message-formatter.service.test.ts": "Тесты форматировщика сообщений",
        "test/telegram/services/telegram-initialization.service.test.ts": "Тесты инициализации Telegram",
        "test/telegram/telegram-core.service.integration.test.ts": "Интеграционные тесты основного сервиса Telegram",
        "test/telegram/telegram.update.test.ts": "Тесты обновлений Telegram",
        "test/telegram/telegram-user.service.test.ts": "Тесты сервиса пользователей Telegram",
        "test/user/services/user.service.test.ts": "Тесты сервиса пользователей",
        "test/user/user.service.integration.test.ts": "Интеграционные тесты сервиса пользователей",
        "test/utils/db-cleanup.test.ts": "Тесты очистки базы данных",
        "test/utils/db-compatibility.test.ts": "Тесты совместимости БД",
        "test/utils/db-connection-checker.test.ts": "Тесты проверки подключения к БД",
        "test/utils/db-connection-handler.test.ts": "Тесты обработчика подключений к БД",
        "test/utils/db-optimization.test.ts": "Тесты оптимизации БД",
        "test/validation/pipes/global-validation.pipe.test.ts": "Тесты глобального pipe валидации",
        "test/validation/services/validation.service.test.ts": "Тесты сервиса валидации",
        "test/validation/validation-error-handler.service.test.ts": "Тесты обработчика ошибок валидации",
        "test/validation/validation.service.integration.test.ts": "Интеграционные тесты сервиса валидации",
        ".vscode/settings.json": "Настройки VS Code для проекта",
        ".vscode/README.md": "Документация настроек VS Code",
        ".yarnrc.yml": "Конфигурация Yarn пакетного менеджера"
    },
    "external_integrations": {
        "openai": {
            "type": "api",
            "description": "OpenAI GPT API для генерации ответов",
            "config_location": "environment variables"
        },
        "telegram": {
            "type": "api",
            "description": "Telegram Bot API",
            "config_location": "environment variables"
        },
        "postgresql": {
            "type": "database",
            "description": "Основная база данных",
            "config_location": "docker-compose.yml"
        },
        "redis": {
            "type": "cache",
            "description": "Система кэширования",
            "config_location": "docker-compose.yml"
        }
    },
    "architecture_notes": [
        "NestJS framework с модульной архитектурой",
        "TypeScript + PostgreSQL + Redis",
        "Контейнеризация через Docker",
        "Централизованные сервисы для общих задач",
        "Dependency Injection через NestJS DI container"
    ]
}