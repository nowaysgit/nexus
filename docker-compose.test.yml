version: '3.8'

# Включение LLM сервисов для тестирования
include:
  - docker-compose.llm.yml

networks:
  test-network:
    name: nexus_test-network
  llm-network:
    name: nexus_llm_network
    driver: bridge
    external: true # Ссылка на сеть из docker-compose.llm.yml

services:
  # Тестовая база данных PostgreSQL
  postgres-test:
    image: postgres:15-alpine
    container_name: nexus-test-postgres
    environment:
      POSTGRES_DB: nexus_test
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
      - ./scripts/init-test-db.sql:/docker-entrypoint-initdb.d/init-test-db.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U test_user -d nexus_test" ]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s
    # Более простые настройки для стабильности
    command: >
      postgres -c listen_addresses='*' -c shared_buffers=128MB -c max_connections=100 -c log_connections=on -c log_disconnections=on -c log_statement=all -c wal_level=minimal -c max_wal_senders=0 -c archive_mode=off -c fsync=off -c synchronous_commit=off -c full_page_writes=off
    restart: unless-stopped
    networks:
      - test-network
      - llm-network

  # Тестовое API с поддержкой локального LLM
  api-test:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: nexus-test-api
    environment:
      - NODE_ENV=test
      - PORT=3001
      - DB_HOST=postgres-test
      - DB_PORT=5432
      - DB_USERNAME=test_user
      - DB_PASSWORD=test_password
      - DB_DATABASE=nexus_test
      - DB_SYNCHRONIZE=true
      # LLM конфигурация для тестов
      - LOCAL_LLM_ENABLED=true
      - LOCAL_LLM_URL=http://ollama-light:11434
      - LOCAL_LLM_MODEL=llama3.2:1b
      - REDIS_LLM_URL=redis://redis-llm:6379
    ports:
      - "3001:3001"
    depends_on:
      postgres-test:
        condition: service_healthy
      ollama-light:
        condition: service_healthy
    networks:
      - test-network
      - llm-network
    profiles: [ "test" ]

volumes:
  postgres_test_data:
