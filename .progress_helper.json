{
  "p": {
    "d": {
      "p": "/nexus",
      "t": "d",
      "c": [
        {
          "p": "/src",
          "t": "d",
          "c": [
            {
              "p": "/character",
              "t": "d",
              "c": [
                {
                  "p": "/character/character.module.ts",
                  "t": "f",
                  "e": [
                    "CharacterModule"
                  ],
                  "d": "Основной модуль, управляющий логикой персонажей"
                },
                {
                  "p": "/character/context-compression.module.ts",
                  "t": "f",
                  "e": [
                    "ContextCompressionModule"
                  ],
                  "d": "Модуль для сжатия контекста диалогов"
                },
                {
                  "p": "/character/message-processing.module.ts",
                  "t": "f",
                  "e": [
                    "MessageProcessingModule"
                  ],
                  "d": "Модуль для обработки входящих сообщений"
                },
                {
                  "p": "/character/story.module.ts",
                  "t": "f",
                  "e": [
                    "StoryModule"
                  ],
                  "d": "Модуль для управления сюжетом и развитием персонажа"
                },
                {
                  "p": "/character/controllers/character.controller.ts",
                  "t": "f",
                  "e": [
                    "CharacterController"
                  ],
                  "d": "Контроллер для управления CRUD операциями персонажей"
                },
                {
                  "p": "/character/controllers/story.controller.ts",
                  "t": "f",
                  "e": [
                    "StoryController"
                  ],
                  "d": "Контроллер для управления сюжетом"
                },
                {
                  "p": "/character/dto/create-character.dto.ts",
                  "t": "f",
                  "e": [
                    "CreateCharacterDto"
                  ],
                  "d": "DTO для создания персонажа"
                },
                {
                  "p": "/character/dto/index.ts",
                  "t": "f",
                  "e": [],
                  "d": "Экспорт всех DTO модуля character"
                },
                {
                  "p": "/character/dto/update-character.dto.ts",
                  "t": "f",
                  "e": [
                    "UpdateCharacterDto"
                  ],
                  "d": "DTO для обновления персонажа"
                },
                {
                  "p": "/character/dto/update-needs.dto.ts",
                  "t": "f",
                  "e": [
                    "UpdateNeedsDto"
                  ],
                  "d": "DTO для обновления потребностей персонажа"
                },
                {
                  "p": "/character/entities/action.entity.ts",
                  "t": "f",
                  "e": [
                    "Action"
                  ],
                  "d": "Сущность действия персонажа"
                },
                {
                  "p": "/character/entities/character.entity.ts",
                  "t": "f",
                  "e": [
                    "Character"
                  ],
                  "d": "Основная сущность персонажа"
                },
                {
                  "p": "/character/entities/character-memory.entity.ts",
                  "t": "f",
                  "e": [
                    "CharacterMemory"
                  ],
                  "d": "Сущность памяти персонажа"
                },
                {
                  "p": "/character/entities/character-motivation.entity.ts",
                  "t": "f",
                  "e": [
                    "CharacterMotivation"
                  ],
                  "d": "Сущность мотивации персонажа"
                },
                {
                  "p": "/character/entities/emotional-state.ts",
                  "t": "f",
                  "e": [
                    "EmotionalState",
                    "Motivation",
                    "EmotionalContext",
                    "EmotionalManifestation",
                    "EmotionalImpact",
                    "EmotionalUpdate"
                  ],
                  "d": "Сущность и все связанные интерфейсы для эмоционального состояния"
                },
                {
                  "p": "/character/entities/manipulation-technique.entity.ts",
                  "t": "f",
                  "e": [
                    "ManipulationTechnique"
                  ],
                  "d": "Сущность манипулятивной техники"
                },
                {
                  "p": "/character/entities/need.entity.ts",
                  "t": "f",
                  "e": [
                    "Need"
                  ],
                  "d": "Сущность потребности персонажа"
                },
                {
                  "p": "/character/entities/story-event.entity.ts",
                  "t": "f",
                  "e": [
                    "StoryEvent"
                  ],
                  "d": "Сущность сюжетного события"
                },
                {
                  "p": "/character/entities/story-plan.entity.ts",
                  "t": "f",
                  "e": [
                    "StoryPlan"
                  ],
                  "d": "Сущность сюжетного плана"
                },
                {
                  "p": "/character/enums/action-type.enum.ts",
                  "t": "f",
                  "e": [
                    "ActionType"
                  ],
                  "d": "Перечисление типов действий"
                },
                {
                  "p": "/character/enums/character-archetype.enum.ts",
                  "t": "f",
                  "e": [
                    "CharacterArchetype"
                  ],
                  "d": "Перечисление архетипов персонажей"
                },
                {
                  "p": "/character/enums/character-need-type.enum.ts",
                  "t": "f",
                  "e": [
                    "CharacterNeedType"
                  ],
                  "d": "Перечисление типов потребностей персонажей"
                },
                {
                  "p": "/character/enums/technique.enums.ts",
                  "t": "f",
                  "e": [
                    "TechniqueIntensity",
                    "TechniquePhase",
                    "ManipulativeTechniqueType"
                  ],
                  "d": "Перечисления для манипулятивных техник"
                },
                {
                  "p": "/character/interfaces/analysis.interfaces.ts",
                  "t": "f",
                  "e": [
                    "MessageAnalysis",
                    "UserIntent",
                    "EmotionalAnalysis",
                    "BehavioralAnalysis",
                    "IntentAnalysis",
                    "ContextualAnalysis",
                    "SafetyAnalysis"
                  ],
                  "d": "Интерфейсы для анализа сообщений, включая намерение пользователя"
                },
                {
                  "p": "/character/interfaces/behavior.interfaces.ts",
                  "t": "f",
                  "e": [
                    "BehavioralResponse"
                  ],
                  "d": "Интерфейсы для поведенческих реакций"
                },
                {
                  "p": "/character/interfaces/character-persona.interface.ts",
                  "t": "f",
                  "e": [
                    "PsychologicalProfile",
                    "PreferencesSystem",
                    "IdealPartnerProfile"
                  ],
                  "d": "Интерфейсы для персоны персонажа"
                },
                {
                  "p": "/character/interfaces/core.interfaces.ts",
                  "t": "f",
                  "e": [
                    "ICharacterService"
                  ],
                  "d": "Ключевые интерфейсы модуля"
                },
                {
                  "p": "/character/interfaces/IEmotionalStateService.ts",
                  "t": "f",
                  "e": [
                    "IEmotionalStateService"
                  ],
                  "d": "Интерфейс для сервиса, управляющего эмоциональным состоянием"
                },
                {
                  "p": "/character/interfaces/index.ts",
                  "t": "f",
                  "e": [],
                  "d": "Экспорт всех интерфейсов модуля character"
                },
                {
                  "p": "/character/interfaces/memory.interfaces.ts",
                  "t": "f",
                  "e": [
                    "IMemory"
                  ],
                  "d": "Интерфейсы для памяти персонажа"
                },
                {
                  "p": "/character/interfaces/needs.interfaces.ts",
                  "t": "f",
                  "e": [
                    "INeed"
                  ],
                  "d": "Интерфейс для потребностей персонажа, использует frustrationLevel"
                },
                {
                  "p": "/character/interfaces/technique.interfaces.ts",
                  "t": "f",
                  "e": [
                    "ITechniqueExecution",
                    "ITechniqueStrategy",
                    "ITechniqueExecutionStrategy"
                  ],
                  "d": "Интерфейсы для манипулятивных техник"
                },
                {
                  "p": "/character/repositories/character.repository.ts",
                  "t": "f",
                  "e": [
                    "CharacterRepository"
                  ],
                  "d": "Репозиторий для работы с сущностью Character"
                },
                {
                  "p": "/character/repositories/technique-execution.repository.ts",
                  "t": "f",
                  "e": [
                    "TechniqueExecutionRepository"
                  ],
                  "d": "Репозиторий для работы с историей выполнения техник"
                },
                {
                  "p": "/character/repositories/user-manipulation-profile.repository.ts",
                  "t": "f",
                  "e": [
                    "UserManipulationProfileRepository"
                  ],
                  "d": "Репозиторий для профиля восприимчивости пользователя к манипуляциям"
                },
                {
                  "p": "/character/services",
                  "t": "d",
                  "c": [
                    {
                      "p": "/character/services/action",
                      "t": "d",
                      "c": [
                        {
                          "p": "/character/services/action/action-executor.service.ts",
                          "t": "f",
                          "e": [
                            "ActionExecutorService"
                          ],
                          "d": "Сервис для выполнения действий персонажа"
                        },
                        {
                          "p": "/character/services/action/action-generator.service.ts",
                          "t": "f",
                          "e": [
                            "ActionGeneratorService"
                          ],
                          "d": "Сервис для генерации действий на основе мотиваций"
                        },
                        {
                          "p": "/character/services/action/action-lifecycle.service.ts",
                          "t": "f",
                          "e": [
                            "ActionLifecycleService"
                          ],
                          "d": "Сервис для управления жизненным циклом действий"
                        },
                        {
                          "p": "/character/services/action/action-resource.service.ts",
                          "t": "f",
                          "e": [
                            "ActionResourceService"
                          ],
                          "d": "Сервис для управления ресурсами, необходимыми для действий"
                        },
                        {
                          "p": "/character/services/action/action-scheduler.service.ts",
                          "t": "f",
                          "e": [
                            "ActionSchedulerService"
                          ],
                          "d": "Планировщик действий персонажа"
                        }
                      ]
                    },
                    {
                      "p": "/character/services/analysis",
                      "t": "d",
                      "c": [
                        {
                          "p": "/character/services/analysis/context-compression.service.ts",
                          "t": "f",
                          "e": [
                            "ContextCompressionService"
                          ],
                          "d": "Сервис для сжатия контекста диалогов"
                        },
                        {
                          "p": "/character/services/analysis/message-analysis.service.ts",
                          "t": "f",
                          "e": [
                            "MessageAnalysisService"
                          ],
                          "d": "Сервис для анализа входящих сообщений"
                        },
                        {
                          "p": "/character/services/analysis/context-analyzer.service.ts",
                          "t": "f",
                          "e": [
                            "ContextAnalyzerService"
                          ],
                          "d": "Сервис для анализа контекста диалогов"
                        }
                      ]
                    },
                    {
                      "p": "/character/services/behavior",
                      "t": "d",
                      "c": [
                        {
                          "p": "/character/services/behavior/character-behavior.service.ts",
                          "t": "f",
                          "e": [
                            "CharacterBehaviorService"
                          ],
                          "d": "Сервис, определяющий поведение персонажа"
                        },
                        {
                          "p": "/character/services/behavior/emotional-behavior.service.ts",
                          "t": "f",
                          "e": [
                            "EmotionalBehaviorService"
                          ],
                          "d": "Сервис для управления эмоциональным поведением"
                        },
                        {
                          "p": "/character/services/behavior/behavior-pattern.service.ts",
                          "t": "f",
                          "e": [
                            "BehaviorPatternService"
                          ],
                          "d": "Сервис для управления поведенческими паттернами"
                        },
                        {
                          "p": "/character/services/behavior/message-behavior.service.ts",
                          "t": "f",
                          "e": [
                            "MessageBehaviorService"
                          ],
                          "d": "Сервис для определения поведения в ответ на сообщение"
                        },
                        {
                          "p": "/character/services/behavior/frustration-management.service.ts",
                          "t": "f",
                          "e": [
                            "FrustrationManagementService"
                          ],
                          "d": "Сервис для управления фрустрацией потребностей"
                        }
                      ]
                    },
                    {
                      "p": "/character/services/manipulation",
                      "t": "d",
                      "c": [
                        {
                          "p": "/character/services/manipulation/manipulation.service.ts",
                          "t": "f",
                          "e": [
                            "ManipulationService"
                          ],
                          "d": "Сервис для управления манипулятивными техниками"
                        }
                      ]
                    },
                    {
                      "p": "/character/services/technique",
                      "t": "d",
                      "c": [
                        {
                          "p": "/character/services/technique/technique-executor.service.ts",
                          "t": "f",
                          "e": [
                            "TechniqueExecutorService"
                          ],
                          "d": "Сервис для выполнения техник воздействия"
                        },
                        {
                          "p": "/character/services/technique/technique-history.service.ts",
                          "t": "f",
                          "e": [
                            "TechniqueHistoryService"
                          ],
                          "d": "Сервис для отслеживания истории применения техник"
                        },
                        {
                          "p": "/character/services/technique/technique-strategy.service.ts",
                          "t": "f",
                          "e": [
                            "TechniqueStrategyService"
                          ],
                          "d": "Сервис для выбора стратегии применения техник"
                        }
                      ]
                    },
                    {
                      "p": "/character/services/core",
                      "t": "d",
                      "c": [
                        {
                          "p": "/character/services/core/character.service.ts",
                          "t": "f",
                          "e": [
                            "CharacterService"
                          ],
                          "d": "Основной сервис для работы с персонажами"
                        },
                        {
                          "p": "/character/services/core/character-management.service.ts",
                          "t": "f",
                          "e": [
                            "CharacterManagementService"
                          ],
                          "d": "Сервис для управления персонажами (CRUD)"
                        },
                        {
                          "p": "/character/services/core/memory.service.ts",
                          "t": "f",
                          "e": [
                            "MemoryService"
                          ],
                          "d": "Сервис для управления памятью персонажа"
                        },
                        {
                          "p": "/character/services/core/needs.service.ts",
                          "t": "f",
                          "e": [
                            "NeedsService"
                          ],
                          "d": "Сервис для управления потребностями персонажа"
                        },
                        {
                          "p": "/character/services/core/motivation.service.ts",
                          "t": "f",
                          "e": [
                            "MotivationService"
                          ],
                          "d": "Сервис для управления мотивациями персонажа"
                        },
                        {
                          "p": "/character/services/core/emotional-state.service.ts",
                          "t": "f",
                          "e": [
                            "EmotionalStateService"
                          ],
                          "d": "Сервис для управления эмоциональным состоянием"
                        },
                        {
                          "p": "/character/services/core/message-processing-coordinator.service.ts",
                          "t": "f",
                          "e": [
                            "MessageProcessingCoordinator"
                          ],
                          "d": "Координатор обработки входящих сообщений"
                        },
                        {
                          "p": "/character/services/core/specialization.service.ts",
                          "t": "f",
                          "e": [
                            "SpecializationService"
                          ],
                          "d": "Сервис для управления специализацией и знаниями персонажа"
                        },
                        {
                          "p": "/character/services/core/story.service.ts",
                          "t": "f",
                          "e": [
                            "StoryService"
                          ],
                          "d": "Сервис для управления сюжетом"
                        },
                        {
                          "p": "/character/services/core/character-scheduler.service.ts",
                          "t": "f",
                          "e": [
                            "CharacterSchedulerService"
                          ],
                          "d": "Планировщик для фоновых задач персонажей"
                        },
                        {
                          "p": "/character/services/core/character-response.service.ts",
                          "t": "f",
                          "e": [
                            "CharacterResponseService"
                          ],
                          "d": "Сервис для генерации ответов персонажа"
                        },
                        {
                          "p": "/character/services/core/character-monitoring.service.ts",
                          "t": "f",
                          "e": [
                            "CharacterMonitoringService"
                          ],
                          "d": "Сервис для мониторинга состояния персонажей"
                        }
                      ]
                    }
                  ]
                },
                {
                  "p": "/auth",
                  "t": "d",
                  "c": [
                    {
                      "p": "/auth/auth.module.ts",
                      "t": "f",
                      "e": [
                        "AuthModule"
                      ],
                      "d": "Модуль аутентификации и авторизации пользователей"
                    },
                    {
                      "p": "/auth/controllers/auth.controller.ts",
                      "t": "f",
                      "e": [
                        "AuthController"
                      ],
                      "d": "Контроллер для обработки запросов регистрации и входа"
                    },
                    {
                      "p": "/auth/dto/login.dto.ts",
                      "t": "f",
                      "e": [
                        "LoginDto"
                      ],
                      "d": "DTO для данных входа пользователя"
                    },
                    {
                      "p": "/auth/dto/register.dto.ts",
                      "t": "f",
                      "e": [
                        "RegisterDto"
                      ],
                      "d": "DTO для данных регистрации пользователя"
                    },
                    {
                      "p": "/auth/interfaces/jwt-payload.interface.ts",
                      "t": "f",
                      "e": [
                        "JwtPayload"
                      ],
                      "d": "Интерфейс для полезной нагрузки JWT токена"
                    },
                    {
                      "p": "/auth/jwt-auth.guard.ts",
                      "t": "f",
                      "e": [
                        "JwtAuthGuard"
                      ],
                      "d": "Гард для защиты роутов с помощью JWT аутентификации"
                    },
                    {
                      "p": "/auth/services/auth.service.ts",
                      "t": "f",
                      "e": [
                        "AuthService"
                      ],
                      "d": "Сервис для логики регистрации, входа и валидации пользователей"
                    },
                    {
                      "p": "/auth/strategies/jwt.strategy.ts",
                      "t": "f",
                      "e": [
                        "JwtStrategy"
                      ],
                      "d": "Стратегия Passport.js для валидации JWT токенов"
                    },
                    {
                      "p": "/auth/user.decorator.ts",
                      "t": "f",
                      "e": [
                        "User"
                      ],
                      "d": "Декоратор для извлечения объекта пользователя из запроса"
                    }
                  ]
                },
                {
                  "p": "/cache",
                  "t": "d",
                  "c": [
                    {
                      "p": "/cache/cache.interface.ts",
                      "t": "f",
                      "e": [
                        "ICacheService"
                      ],
                      "d": "Интерфейс для сервиса кэширования"
                    },
                    {
                      "p": "/cache/cache.module.ts",
                      "t": "f",
                      "e": [
                        "CacheModule"
                      ],
                      "d": "Модуль для управления кэшированием в приложении"
                    },
                    {
                      "p": "/cache/cache.service.ts",
                      "t": "f",
                      "e": [
                        "CacheService"
                      ],
                      "d": "Сервис для реализации логики кэширования (get, set, del)"
                    },
                    {
                      "p": "/cache/index.ts",
                      "t": "f",
                      "e": [
                        "CacheModule",
                        "CacheService",
                        "ICacheService"
                      ],
                      "d": "Экспорт всех сущностей модуля кэширования"
                    }
                  ]
                },
                {
                  "p": "/app.module.ts",
                  "t": "f",
                  "e": [
                    "AppModule"
                  ],
                  "d": "Корневой модуль приложения, собирающий все остальные модули"
                },
                {
                  "p": "/main.ts",
                  "t": "f",
                  "e": [],
                  "d": "Точка входа в приложение, инициализация NestJS"
                },
                {
                  "p": "/common",
                  "t": "d",
                  "c": [
                    {
                      "p": "/common/common.module.ts",
                      "t": "f",
                      "e": [
                        "CommonModule"
                      ],
                      "d": "Общий модуль, предоставляющий базовые сервисы и утилиты"
                    },
                    {
                      "p": "/common/index.ts",
                      "t": "f",
                      "e": [],
                      "d": "Экспорт основных сущностей общего модуля"
                    },
                    {
                      "p": "/common/base/base.service.ts",
                      "t": "f",
                      "e": [
                        "BaseService"
                      ],
                      "d": "Базовый сервис с общей логикой обработки ошибок и логирования"
                    },
                    {
                      "p": "/common/abstractions/entity-manager.abstract.ts",
                      "t": "f",
                      "e": [
                        "EntityManager"
                      ],
                      "d": "Абстрактный класс для управления сущностями"
                    },
                    {
                      "p": "/common/abstractions/pattern-utils.ts",
                      "t": "f",
                      "e": [
                        "PatternUtils"
                      ],
                      "d": "Утилиты для работы с паттернами"
                    },
                    {
                      "p": "/common/config/cache.config.ts",
                      "t": "f",
                      "e": [
                        "cacheConfig"
                      ],
                      "d": "Конфигурация для сервиса кэширования"
                    },
                    {
                      "p": "/common/config/configuration.ts",
                      "t": "f",
                      "e": [
                        "defaultConfig"
                      ],
                      "d": "Основная конфигурация приложения"
                    },
                    {
                      "p": "/common/config/index.ts",
                      "t": "f",
                      "e": [],
                      "d": "Экспорт всех конфигураций"
                    },
                    {
                      "p": "/common/config/test.configuration.ts",
                      "t": "f",
                      "e": [
                        "testConfig"
                      ],
                      "d": "Конфигурация для тестового окружения"
                    },
                    {
                      "p": "/common/config/validation.schema.ts",
                      "t": "f",
                      "e": [
                        "validationSchema"
                      ],
                      "d": "Схема валидации для переменных окружения"
                    },
                    {
                      "p": "/common/constants/injection-tokens.ts",
                      "t": "f",
                      "e": [
                        "INJECTION_TOKENS"
                      ],
                      "d": "Токены для внедрения зависимостей"
                    },
                    {
                      "p": "/common/controllers/api.controller.ts",
                      "t": "f",
                      "e": [
                        "ApiController"
                      ],
                      "d": "Базовый API контроллер"
                    },
                    {
                      "p": "/common/decorators/retry.decorator.ts",
                      "t": "f",
                      "e": [
                        "Retry"
                      ],
                      "d": "Декоратор для повторного выполнения метода при ошибке"
                    },
                    {
                      "p": "/common/decorators/sanitize.decorator.ts",
                      "t": "f",
                      "e": [
                        "Sanitize"
                      ],
                      "d": "Декоратор для очистки входных данных"
                    },
                    {
                      "p": "/common/decorators/validation-rule.decorator.ts",
                      "t": "f",
                      "e": [
                        "ValidationRule"
                      ],
                      "d": "Декоратор для кастомных правил валидации"
                    },
                    {
                      "p": "/common/guards/api-key.guard.ts",
                      "t": "f",
                      "e": [
                        "ApiKeyGuard"
                      ],
                      "d": "Гард для проверки API ключа"
                    },
                    {
                      "p": "/common/guards/guards.module.ts",
                      "t": "f",
                      "e": [
                        "GuardsModule"
                      ],
                      "d": "Модуль для всех гардов"
                    },
                    {
                      "p": "/common/guards/public.decorator.ts",
                      "t": "f",
                      "e": [
                        "Public"
                      ],
                      "d": "Декоратор для публичных роутов, не требующих аутентификации"
                    },
                    {
                      "p": "/common/guards/rate-limit.guard.ts",
                      "t": "f",
                      "e": [
                        "RateLimitGuard"
                      ],
                      "d": "Гард для ограничения частоты запросов"
                    },
                    {
                      "p": "/common/guards/role.guard.ts",
                      "t": "f",
                      "e": [
                        "RoleGuard"
                      ],
                      "d": "Гард для проверки ролей пользователя"
                    },
                    {
                      "p": "/common/http/error-handled-http.client.ts",
                      "t": "f",
                      "e": [
                        "ErrorHandledHttpClient"
                      ],
                      "d": "HTTP клиент с обработкой ошибок"
                    },
                    {
                      "p": "/common/http/http-client.module.ts",
                      "t": "f",
                      "e": [
                        "HttpClientModule"
                      ],
                      "d": "Модуль для HTTP клиента"
                    },
                    {
                      "p": "/common/interceptors/sanitize-request.interceptor.ts",
                      "t": "f",
                      "e": [
                        "SanitizeRequestInterceptor"
                      ],
                      "d": "Интерсептор для очистки запросов"
                    },
                    {
                      "p": "/common/middleware/api-key.middleware.ts",
                      "t": "f",
                      "e": [
                        "ApiKeyMiddleware"
                      ],
                      "d": "Middleware для проверки API ключа"
                    },
                    {
                      "p": "/common/middleware/index.ts",
                      "t": "f",
                      "e": [],
                      "d": "Экспорт всех middleware"
                    },
                    {
                      "p": "/common/middleware/request-tracker.middleware.ts",
                      "t": "f",
                      "e": [
                        "RequestTrackerMiddleware"
                      ],
                      "d": "Middleware для отслеживания запросов"
                    },
                    {
                      "p": "/common/types/common-types.ts",
                      "t": "f",
                      "e": [],
                      "d": "Общие типы для всего приложения"
                    },
                    {
                      "p": "/common/utils/cors-validator.util.ts",
                      "t": "f",
                      "e": [
                        "CorsValidator"
                      ],
                      "d": "Утилита для валидации CORS"
                    },
                    {
                      "p": "/common/utils/database.module.ts",
                      "t": "f",
                      "e": [
                        "DatabaseModule"
                      ],
                      "d": "Модуль для работы с базой данных"
                    },
                    {
                      "p": "/common/utils/error.utils.ts",
                      "t": "f",
                      "e": [],
                      "d": "Утилиты для работы с ошибками"
                    },
                    {
                      "p": "/common/utils/header-sanitizer.util.ts",
                      "t": "f",
                      "e": [
                        "HeaderSanitizer"
                      ],
                      "d": "Утилита для очистки заголовков"
                    },
                    {
                      "p": "/common/utils/port-validator.util.ts",
                      "t": "f",
                      "e": [
                        "PortValidator"
                      ],
                      "d": "Утилита для валидации порта"
                    },
                    {
                      "p": "/common/utils/db/db-connection-handler.service.ts",
                      "t": "f",
                      "e": [
                        "DbConnectionHandler"
                      ],
                      "d": "Сервис для обработки соединений с БД"
                    },
                    {
                      "p": "/common/utils/db/db-events-handler.service.ts",
                      "t": "f",
                      "e": [
                        "DbEventsHandler"
                      ],
                      "d": "Сервис для обработки событий БД"
                    },
                    {
                      "p": "/common/utils/error-handling/error-handling.module.ts",
                      "t": "f",
                      "e": [
                        "ErrorHandlingModule"
                      ],
                      "d": "Модуль для обработки ошибок"
                    },
                    {
                      "p": "/common/utils/error-handling/error-handling.service.ts",
                      "t": "f",
                      "e": [
                        "ErrorHandlingService"
                      ],
                      "d": "Сервис для централизованной обработки ошибок"
                    },
                    {
                      "p": "/common/utils/error-handling/error-handling.utils.ts",
                      "t": "f",
                      "e": [],
                      "d": "Утилиты для обработки ошибок"
                    },
                    {
                      "p": "/common/utils/error-handling/index.ts",
                      "t": "f",
                      "e": [],
                      "d": "Экспорт всех сущностей модуля обработки ошибок"
                    },
                    {
                      "p": "/common/utils/query/query.utils.ts",
                      "t": "f",
                      "e": [
                        "QueryUtils"
                      ],
                      "d": "Утилиты для работы с запросами к БД"
                    },
                    {
                      "p": "/dialog",
                      "t": "d",
                      "c": [
                        {
                          "p": "/dialog/controllers/dialog.controller.ts",
                          "t": "f",
                          "e": [
                            "DialogController"
                          ],
                          "d": "Контроллер для управления диалогами"
                        },
                        {
                          "p": "/dialog/dialog.module.ts",
                          "t": "f",
                          "e": [
                            "DialogModule"
                          ],
                          "d": "Модуль для управления диалогами"
                        },
                        {
                          "p": "/dialog/dto/create-message.dto.ts",
                          "t": "f",
                          "e": [
                            "CreateMessageDto"
                          ],
                          "d": "DTO для создания сообщения"
                        },
                        {
                          "p": "/dialog/dto/create-proactive-message.dto.ts",
                          "t": "f",
                          "e": [
                            "CreateProactiveMessageDto"
                          ],
                          "d": "DTO для создания проактивного сообщения"
                        },
                        {
                          "p": "/dialog/dto/index.ts",
                          "t": "f",
                          "e": [],
                          "d": "Экспорт всех DTO модуля диалогов"
                        },
                        {
                          "p": "/dialog/entities/dialog.entity.ts",
                          "t": "f",
                          "e": [
                            "Dialog"
                          ],
                          "d": "Сущность диалога"
                        },
                        {
                          "p": "/dialog/entities/message.entity.ts",
                          "t": "f",
                          "e": [
                            "Message"
                          ],
                          "d": "Сущность сообщения"
                        },
                        {
                          "p": "/dialog/interfaces/create-dialog.interface.ts",
                          "t": "f",
                          "e": [
                            "CreateDialogOptions"
                          ],
                          "d": "Интерфейс для опций создания диалога"
                        },
                        {
                          "p": "/dialog/services/dialog.service.ts",
                          "t": "f",
                          "e": [
                            "DialogService"
                          ],
                          "d": "Сервис для управления логикой диалогов"
                        }
                      ]
                    },
                    {
                      "p": "/infrastructure",
                      "t": "d",
                      "c": [
                        {
                          "p": "/infrastructure/api-key.service.ts",
                          "t": "f",
                          "e": [
                            "ApiKeyService"
                          ],
                          "d": "Сервис для управления API ключами"
                        },
                        {
                          "p": "/infrastructure/encryption.service.ts",
                          "t": "f",
                          "e": [
                            "EncryptionService"
                          ],
                          "d": "Сервис для шифрования и дешифрования данных"
                        },
                        {
                          "p": "/infrastructure/infrastructure.module.ts",
                          "t": "f",
                          "e": [
                            "InfrastructureModule"
                          ],
                          "d": "Модуль для инфраструктурных сервисов"
                        }
                      ]
                    },
                    {
                      "p": "/llm",
                      "t": "d",
                      "c": [
                        {
                          "p": "/llm/llm.module.ts",
                          "t": "f",
                          "e": [
                            "LlmModule"
                          ],
                          "d": "Модуль для работы с LLM"
                        },
                        {
                          "p": "/llm/providers/llama-provider.service.ts",
                          "t": "f",
                          "e": [
                            "LlamaProviderService"
                          ],
                          "d": "Провайдер для работы с Llama"
                        },
                        {
                          "p": "/llm/providers/openai-core.service.ts",
                          "t": "f",
                          "e": [
                            "OpenAiCoreService"
                          ],
                          "d": "Ядро для работы с OpenAI"
                        },
                        {
                          "p": "/llm/providers/openai.provider.service.ts",
                          "t": "f",
                          "e": [
                            "OpenAIProviderService"
                          ],
                          "d": "Провайдер для работы с OpenAI"
                        },
                        {
                          "p": "/llm/services/llm-provider-manager.service.ts",
                          "t": "f",
                          "e": [
                            "LlmProviderManagerService"
                          ],
                          "d": "Менеджер для управления провайдерами LLM"
                        },
                        {
                          "p": "/llm/services/llm.service.ts",
                          "t": "f",
                          "e": [
                            "LlmService"
                          ],
                          "d": "Сервис для взаимодействия с LLM"
                        }
                      ]
                    },
                    {
                      "p": "/logging",
                      "t": "d",
                      "c": [
                        {
                          "p": "/logging/global-exception.filter.ts",
                          "t": "f",
                          "e": [
                            "GlobalExceptionFilter"
                          ],
                          "d": "Глобальный фильтр исключений для логирования"
                        },
                        {
                          "p": "/logging/http-logger.middleware.ts",
                          "t": "f",
                          "e": [
                            "HttpLoggerMiddleware"
                          ],
                          "d": "Middleware для логирования HTTP запросов"
                        },
                        {
                          "p": "/logging/index.ts",
                          "t": "f",
                          "e": [],
                          "d": "Экспорт всех сущностей модуля логирования"
                        },
                        {
                          "p": "/logging/logging.module.ts",
                          "t": "f",
                          "e": [
                            "LoggingModule"
                          ],
                          "d": "Модуль для управления логированием"
                        },
                        {
                          "p": "/logging/log.service.ts",
                          "t": "f",
                          "e": [
                            "LogService"
                          ],
                          "d": "Сервис для логирования"
                        },
                        {
                          "p": "/logging/rollbar.service.ts",
                          "t": "f",
                          "e": [
                            "RollbarService"
                          ],
                          "d": "Сервис для интеграции с Rollbar"
                        }
                      ]
                    },
                    {
                      "p": "/message-queue",
                      "t": "d",
                      "c": [
                        {
                          "p": "/message-queue/message-queue.module.ts",
                          "t": "f",
                          "e": [
                            "MessageQueueModule"
                          ],
                          "d": "Модуль для работы с очередями сообщений"
                        },
                        {
                          "p": "/message-queue/message-queue.service.ts",
                          "t": "f",
                          "e": [
                            "MessageQueueService"
                          ],
                          "d": "Сервис для взаимодействия с очередями сообщений"
                        }
                      ]
                    },
                    {
                      "p": "/monitoring",
                      "t": "d",
                      "c": [
                        {
                          "p": "/monitoring/monitoring.module.ts",
                          "t": "f",
                          "e": [
                            "MonitoringModule"
                          ],
                          "d": "Модуль для мониторинга состояния приложения"
                        },
                        {
                          "p": "/monitoring/monitoring.service.ts",
                          "t": "f",
                          "e": [
                            "MonitoringService"
                          ],
                          "d": "Сервис для сбора и предоставления метрик"
                        },
                        {
                          "p": "/monitoring/controllers/monitoring.controller.ts",
                          "t": "f",
                          "e": [
                            "MonitoringController"
                          ],
                          "d": "Контроллер для предоставления метрик Prometheus"
                        },
                        {
                          "p": "/monitoring/controllers/optimizer.controller.ts",
                          "t": "f",
                          "e": [
                            "OptimizerController"
                          ],
                          "d": "Контроллер для управления оптимизацией"
                        },
                        {
                          "p": "/monitoring/entities/alert.entity.ts",
                          "t": "f",
                          "e": [
                            "Alert"
                          ],
                          "d": "Сущность для алертов мониторинга"
                        },
                        {
                          "p": "/monitoring/entities/api-metric.entity.ts",
                          "t": "f",
                          "e": [
                            "ApiMetric"
                          ],
                          "d": "Сущность для метрик API"
                        },
                        {
                          "p": "/monitoring/entities/metric-aggregation.entity.ts",
                          "t": "f",
                          "e": [
                            "MetricAggregation"
                          ],
                          "d": "Сущность для агрегированных метрик"
                        },
                        {
                          "p": "/monitoring/entities/metric-base.entity.ts",
                          "t": "f",
                          "e": [
                            "MetricBase"
                          ],
                          "d": "Базовая сущность для метрик"
                        },
                        {
                          "p": "/monitoring/entities/optimizer-recommendation.entity.ts",
                          "t": "f",
                          "e": [
                            "OptimizerRecommendation"
                          ],
                          "d": "Сущность для рекомендаций оптимизатора"
                        },
                        {
                          "p": "/monitoring/entities/scaling-operation.entity.ts",
                          "t": "f",
                          "e": [
                            "ScalingOperation"
                          ],
                          "d": "Сущность для операций масштабирования"
                        },
                        {
                          "p": "/monitoring/entities/scaling-rule.entity.ts",
                          "t": "f",
                          "e": [
                            "ScalingRule"
                          ],
                          "d": "Сущность для правил масштабирования"
                        },
                        {
                          "p": "/monitoring/entities/system-metric.entity.ts",
                          "t": "f",
                          "e": [
                            "SystemMetric"
                          ],
                          "d": "Сущность для системных метрик"
                        },
                        {
                          "p": "/monitoring/entities/user-metric.entity.ts",
                          "t": "f",
                          "e": [
                            "UserMetric"
                          ],
                          "d": "Сущность для пользовательских метрик"
                        },
                        {
                          "p": "/monitoring/enums/health-status.enum.ts",
                          "t": "f",
                          "e": [
                            "HealthStatus"
                          ],
                          "d": "Перечисление статусов здоровья системы"
                        },
                        {
                          "p": "/monitoring/guards/prometheus-auth.guard.ts",
                          "t": "f",
                          "e": [
                            "PrometheusAuthGuard"
                          ],
                          "d": "Гард для защиты эндпоинта метрик"
                        },
                        {
                          "p": "/monitoring/middleware/metrics.middleware.ts",
                          "t": "f",
                          "e": [
                            "MetricsMiddleware"
                          ],
                          "d": "Middleware для сбора метрик запросов"
                        },
                        {
                          "p": "/monitoring/services/alert.service.ts",
                          "t": "f",
                          "e": [
                            "AlertService"
                          ],
                          "d": "Сервис для управления алертами"
                        },
                        {
                          "p": "/monitoring/services/optimization.service.ts",
                          "t": "f",
                          "e": [
                            "OptimizationService"
                          ],
                          "d": "Сервис для управления оптимизацией"
                        }
                      ]
                    },
                    {
                      "p": "/prompt-template",
                      "t": "d",
                      "c": [
                        {
                          "p": "/prompt-template/prompt-template.module.ts",
                          "t": "f",
                          "e": [
                            "PromptTemplateModule"
                          ],
                          "d": "Модуль для управления шаблонами промптов"
                        },
                        {
                          "p": "/prompt-template/prompt-template.service.ts",
                          "t": "f",
                          "e": [
                            "PromptTemplateService"
                          ],
                          "d": "Сервис для работы с шаблонами промптов"
                        }
                      ]
                    },
                    {
                      "p": "/telegram",
                      "t": "d",
                      "c": [
                        {
                          "p": "/telegram/telegram.module.ts",
                          "t": "f",
                          "e": [
                            "TelegramModule"
                          ],
                          "d": "Модуль для интеграции с Telegram"
                        },
                        {
                          "p": "/telegram/telegram.service.ts",
                          "t": "f",
                          "e": [
                            "TelegramService"
                          ],
                          "d": "Сервис для взаимодействия с Telegram Bot API"
                        },
                        {
                          "p": "/telegram/telegram.update.ts",
                          "t": "f",
                          "e": [
                            "TelegramUpdate"
                          ],
                          "d": "Основной класс для обработки обновлений от Telegram"
                        },
                        {
                          "p": "/telegram/constants/index.ts",
                          "t": "f",
                          "e": [],
                          "d": "Экспорт всех констант модуля Telegram"
                        },
                        {
                          "p": "/telegram/constants/states.ts",
                          "t": "f",
                          "e": [
                            "CharacterCreationState"
                          ],
                          "d": "Состояния для конечных автоматов в Telegram"
                        },
                        {
                          "p": "/telegram/constants/tokens.ts",
                          "t": "f",
                          "e": [
                            "TELEGRAM_BOT_TOKEN"
                          ],
                          "d": "Токены для внедрения зависимостей в модуле Telegram"
                        },
                        {
                          "p": "/telegram/decorators/access-check.decorator.ts",
                          "t": "f",
                          "e": [
                            "AccessCheck"
                          ],
                          "d": "Декоратор для проверки прав доступа к командам"
                        },
                        {
                          "p": "/telegram/decorators/error-handling.decorator.ts",
                          "t": "f",
                          "e": [
                            "HandleTelegramError"
                          ],
                          "d": "Декоратор для обработки ошибок в хендлерах Telegram"
                        },
                        {
                          "p": "/telegram/decorators/index.ts",
                          "t": "f",
                          "e": [],
                          "d": "Экспорт всех декораторов модуля Telegram"
                        },
                        {
                          "p": "/telegram/decorators/inject-bot.decorator.ts",
                          "t": "f",
                          "e": [
                            "InjectBot"
                          ],
                          "d": "Декоратор для внедрения экземпляра бота"
                        },
                        {
                          "p": "/telegram/decorators/measure-execution.decorator.ts",
                          "t": "f",
                          "e": [
                            "MeasureExecution"
                          ],
                          "d": "Декоратор для измерения времени выполнения"
                        },
                        {
                          "p": "/telegram/decorators/telegram.decorators.ts",
                          "t": "f",
                          "e": [
                            "OnMessage",
                            "OnCommand",
                            "OnCallbackQuery"
                          ],
                          "d": "Основные декораторы для обработки событий Telegram"
                        },
                        {
                          "p": "/telegram/entities/character-settings.entity.ts",
                          "t": "f",
                          "e": [
                            "CharacterSettings"
                          ],
                          "d": "Сущность для хранения настроек персонажа в Telegram"
                        },
                        {
                          "p": "/telegram/handlers/base.handler.ts",
                          "t": "f",
                          "e": [
                            "BaseHandler"
                          ],
                          "d": "Базовый класс для всех обработчиков команд"
                        },
                        {
                          "p": "/telegram/handlers/callback.handler.ts",
                          "t": "f",
                          "e": [
                            "CallbackHandler"
                          ],
                          "d": "Обработчик для callback-запросов от inline-клавиатур"
                        },
                        {
                          "p": "/telegram/handlers/command.handler.ts",
                          "t": "f",
                          "e": [
                            "CommandHandler"
                          ],
                          "d": "Обработчик для текстовых команд"
                        },
                        {
                          "p": "/telegram/handlers/message.handler.ts",
                          "t": "f",
                          "e": [
                            "MessageHandler"
                          ],
                          "d": "Обработчик для входящих текстовых сообщений"
                        },
                        {
                          "p": "/telegram/interfaces/character-settings.interface.ts",
                          "t": "f",
                          "e": [
                            "ICharacterSettings"
                          ],
                          "d": "Интерфейс для настроек персонажа в Telegram"
                        },
                        {
                          "p": "/telegram/interfaces/context.interface.ts",
                          "t": "f",
                          "e": [
                            "Context"
                          ],
                          "d": "Интерфейс контекста Telegraf"
                        },
                        {
                          "p": "/telegram/interfaces/telegram.interfaces.ts",
                          "t": "f",
                          "e": [],
                          "d": "Общие интерфейсы для модуля Telegram"
                        },
                        {
                          "p": "/telegram/providers/telegram-bot.provider.ts",
                          "t": "f",
                          "e": [
                            "telegramBotProvider"
                          ],
                          "d": "Провайдер для создания экземпляра бота Telegraf"
                        },
                        {
                          "p": "/telegram/services/access-control.service.ts",
                          "t": "f",
                          "e": [
                            "AccessControlService"
                          ],
                          "d": "Сервис для управления правами доступа пользователей"
                        },
                        {
                          "p": "/telegram/services/character-creation.service.ts",
                          "t": "f",
                          "e": [
                            "CharacterCreationService"
                          ],
                          "d": "Сервис для пошагового создания персонажа через Telegram"
                        },
                        {
                          "p": "/telegram/services/keyboard-formatter.service.ts",
                          "t": "f",
                          "e": [
                            "KeyboardFormatterService"
                          ],
                          "d": "Сервис для форматирования inline-клавиатур"
                        },
                        {
                          "p": "/telegram/services/message-formatter.service.ts",
                          "t": "f",
                          "e": [
                            "MessageFormatterService"
                          ],
                          "d": "Сервис для форматирования сообщений"
                        },
                        {
                          "p": "/telegram/services/message.service.ts",
                          "t": "f",
                          "e": [
                            "TelegramMessageService"
                          ],
                          "d": "Сервис для отправки и управления сообщениями"
                        },
                        {
                          "p": "/telegram/services/telegram-core.service.ts",
                          "t": "f",
                          "e": [
                            "TelegramCoreService"
                          ],
                          "d": "Ядро модуля Telegram, регистрирующее хендлеры"
                        },
                        {
                          "p": "/telegram/services/telegram-initialization.service.ts",
                          "t": "f",
                          "e": [
                            "TelegramInitializationService"
                          ],
                          "d": "Сервис для инициализации и запуска бота"
                        },
                        {
                          "p": "/telegram/services/telegram-user.service.ts",
                          "t": "f",
                          "e": [
                            "TelegramUserService"
                          ],
                          "d": "Сервис для управления пользователями Telegram"
                        }
                      ]
                    },
                    {
                      "p": "/user",
                      "t": "d",
                      "c": [
                        {
                          "p": "/user/user.module.ts",
                          "t": "f",
                          "e": [
                            "UserModule"
                          ],
                          "d": "Модуль для управления пользователями"
                        },
                        {
                          "p": "/user/user.controller.ts",
                          "t": "f",
                          "e": [
                            "UserController"
                          ],
                          "d": "Контроллер для управления пользователями"
                        },
                        {
                          "p": "/user/services/user.service.ts",
                          "t": "f",
                          "e": [
                            "UserService"
                          ],
                          "d": "Сервис для управления логикой пользователей"
                        },
                        {
                          "p": "/user/dto/create-user.dto.ts",
                          "t": "f",
                          "e": [
                            "CreateUserDto"
                          ],
                          "d": "DTO для создания пользователя"
                        },
                        {
                          "p": "/user/dto/update-user.dto.ts",
                          "t": "f",
                          "e": [
                            "UpdateUserDto"
                          ],
                          "d": "DTO для обновления пользователя"
                        },
                        {
                          "p": "/user/entities/access-key.entity.ts",
                          "t": "f",
                          "e": [
                            "AccessKey"
                          ],
                          "d": "Сущность для ключей доступа пользователя"
                        },
                        {
                          "p": "/user/entities/psychological-test.entity.ts",
                          "t": "f",
                          "e": [
                            "PsychologicalTest"
                          ],
                          "d": "Сущность для психологических тестов пользователя"
                        },
                        {
                          "p": "/user/entities/user.entity.ts",
                          "t": "f",
                          "e": [
                            "User"
                          ],
                          "d": "Основная сущность пользователя"
                        }
                      ]
                    },
                    {
                      "p": "/validation",
                      "t": "d",
                      "c": [
                        {
                          "p": "/validation/validation.module.ts",
                          "t": "f",
                          "e": [
                            "ValidationModule"
                          ],
                          "d": "Модуль для управления валидацией"
                        },
                        {
                          "p": "/validation/index.ts",
                          "t": "f",
                          "e": [],
                          "d": "Экспорт всех сущностей модуля валидации"
                        },
                        {
                          "p": "/validation/pipes/global-validation.pipe.ts",
                          "t": "f",
                          "e": [
                            "GlobalValidationPipe"
                          ],
                          "d": "Глобальный pipe для валидации входящих данных"
                        },
                        {
                          "p": "/validation/rules/standard-rules.ts",
                          "t": "f",
                          "e": [
                            "standardRules"
                          ],
                          "d": "Стандартные правила валидации"
                        },
                        {
                          "p": "/validation/services/validation-error-handler.service.ts",
                          "t": "f",
                          "e": [
                            "ValidationErrorHandler"
                          ],
                          "d": "Сервис для обработки ошибок валидации"
                        },
                        {
                          "p": "/validation/services/validation.service.ts",
                          "t": "f",
                          "e": [
                            "ValidationService"
                          ],
                          "d": "Сервис для выполнения кастомной валидации"
                        },
                        {
                          "p": "/validation/transformers/message-transformers.ts",
                          "t": "f",
                          "e": [],
                          "d": "Трансформеры для сообщений"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "p": "/test",
          "t": "d",
          "c": [
            {
              "p": "/test/setup-integration.ts",
              "t": "f",
              "d": "Скрипт начальной настройки для интеграционных тестов"
            },
            {
              "p": "/test/setup.ts",
              "t": "f",
              "d": "Основной скрипт начальной настройки для всех тестов"
            },
            {
              "p": "/test/auth",
              "t": "d",
              "c": [
                {
                  "p": "/test/auth/auth.service.integration.test.ts",
                  "t": "f",
                  "d": "Интеграционные тесты для AuthService"
                }
              ]
            },
            {
              "p": "/test/cache",
              "t": "d",
              "c": [
                {
                  "p": "/test/cache/cache.service.integration.test.ts",
                  "t": "f",
                  "d": "Интеграционные тесты для CacheService"
                },
                {
                  "p": "/test/cache/cache.service.test.ts",
                  "t": "f",
                  "d": "Модульные тесты для CacheService"
                }
              ]
            },
            {
              "p": "/test/character",
              "t": "d",
              "c": [
                {
                  "p": "/test/character/action.service.integration.test.ts",
                  "t": "f",
                  "d": "Интеграционные тесты для ActionService"
                },
                {
                  "p": "/test/character/action.service.test.ts",
                  "t": "f",
                  "d": "Модульные тесты для ActionService"
                },
                {
                  "p": "/test/character/character-behavior-action-trigger.test.ts",
                  "t": "f",
                  "d": "Тесты для триггеров действий в поведении персонажа"
                },
                {
                  "p": "/test/character/character-behavior.service.test.ts",
                  "t": "f",
                  "d": "Тесты для сервиса поведения персонажа"
                },
                {
                  "p": "/test/character/character-management.service.test.ts",
                  "t": "f",
                  "d": "Тесты для сервиса управления персонажами"
                },
                {
                  "p": "/test/character/character-response.service.test.ts",
                  "t": "f",
                  "d": "Тесты для сервиса генерации ответов персонажа"
                },
                {
                  "p": "/test/character/character-scheduler.service.test.ts",
                  "t": "f",
                  "d": "Тесты для планировщика задач персонажа"
                },
                {
                  "p": "/test/character/character.service.test.ts",
                  "t": "f",
                  "d": "Модульные тесты для основного CharacterService"
                },
                {
                  "p": "/test/character/context-compression.service.test.ts",
                  "t": "f",
                  "d": "Тесты для сервиса сжатия контекста"
                },
                {
                  "p": "/test/character/emotional-state.service.test.ts",
                  "t": "f",
                  "d": "Тесты для сервиса эмоционального состояния"
                },
                {
                  "p": "/test/character/manipulation.service.integration.test.ts",
                  "t": "f",
                  "d": "Интеграционные тесты для сервиса манипуляций"
                },
                {
                  "p": "/test/character/manipulation.service.test.ts",
                  "t": "f",
                  "d": "Модульные тесты для сервиса манипуляций"
                },
                {
                  "p": "/test/character/memory.service.test.ts",
                  "t": "f",
                  "d": "Тесты для сервиса памяти"
                },
                {
                  "p": "/test/character/message-analysis.service.test.ts",
                  "t": "f",
                  "d": "Тесты для сервиса анализа сообщений"
                },
                {
                  "p": "/test/character/message-processing-coordinator.service.integration.test.ts",
                  "t": "f",
                  "d": "Интеграционные тесты для координатора обработки сообщений"
                },
                {
                  "p": "/test/character/message-processing-coordinator.service.test.ts",
                  "t": "f",
                  "d": "Модульные тесты для координатора обработки сообщений"
                },
                {
                  "p": "/test/character/motivation.service.test.ts",
                  "t": "f",
                  "d": "Тесты для сервиса мотиваций"
                },
                {
                  "p": "/test/character/needs.service.integration.test.ts",
                  "t": "f",
                  "d": "Интеграционные тесты для сервиса потребностей"
                },
                {
                  "p": "/test/character/needs.service.test.ts",
                  "t": "f",
                  "d": "Модульные тесты для сервиса потребностей"
                },
                {
                  "p": "/test/character/specialization.service.test.ts",
                  "t": "f",
                  "d": "Тесты для сервиса специализации"
                },
                {
                  "p": "/test/character/story.service.test.ts",
                  "t": "f",
                  "d": "Тесты для сервиса сюжета"
                },
                {
                  "p": "/test/character/technique-executor.service.integration.test.ts",
                  "t": "f",
                  "d": "Интеграционные тесты для исполнителя техник"
                },
                {
                  "p": "/test/character/technique-executor.service.test.ts",
                  "t": "f",
                  "d": "Модульные тесты для исполнителя техник"
                },
                {
                  "p": "/test/character/services",
                  "t": "d",
                  "c": [
                    {
                      "p": "/test/character/services/action-lifecycle.service.test.ts",
                      "t": "f",
                      "d": "Тесты для сервиса жизненного цикла действий"
                    },
                    {
                      "p": "/test/character/services/action-scheduler.service.test.ts",
                      "t": "f",
                      "d": "Тесты для планировщика действий"
                    },
                    {
                      "p": "/test/character/services/behavior-pattern.service.test.ts",
                      "t": "f",
                      "d": "Тесты для сервиса поведенческих паттернов"
                    },
                    {
                      "p": "/test/character/services/character-monitoring.service.test.ts",
                      "t": "f",
                      "d": "Тесты для сервиса мониторинга персонажа"
                    },
                    {
                      "p": "/test/character/services/emotional-behavior.service.test.ts",
                      "t": "f",
                      "d": "Тесты для сервиса эмоционального поведения"
                    },
                    {
                      "p": "/test/character/services/frustration-management.service.test.ts",
                      "t": "f",
                      "d": "Тесты для сервиса управления фрустрацией"
                    }
                  ]
                }
              ]
            },
            {
              "p": "/test/common",
              "t": "d",
              "c": [
                {
                  "p": "/test/common/error-handling.service.integration.test.ts",
                  "t": "f",
                  "d": "Интеграционные тесты для сервиса обработки ошибок"
                },
                {
                  "p": "/test/common/test-configurations.test.ts",
                  "t": "f",
                  "d": "Тесты для базовых тестовых конфигураций"
                },
                {
                  "p": "/test/common/abstractions",
                  "t": "d",
                  "c": [
                    {
                      "p": "/test/common/abstractions/pattern-utils.test.ts",
                      "t": "f",
                      "d": "Тесты для утилит по работе с паттернами"
                    }
                  ]
                },
                {
                  "p": "/test/common/base",
                  "t": "d",
                  "c": [
                    {
                      "p": "/test/common/base/base.service.test.ts",
                      "t": "f",
                      "d": "Тесты для базового сервиса"
                    }
                  ]
                }
              ]
            },
            {
              "p": "/test/dialog",
              "t": "d",
              "c": [
                {
                  "p": "/test/dialog/dialog.service.fix.integration.test.ts",
                  "t": "f",
                  "d": "Интеграционные тесты для исправления ошибок в DialogService"
                },
                {
                  "p": "/test/dialog/dialog.service.integration.test.ts",
                  "t": "f",
                  "d": "Интеграционные тесты для DialogService"
                },
                {
                  "p": "/test/dialog/dialog.service.test.ts",
                  "t": "f",
                  "d": "Модульные тесты для DialogService"
                }
              ]
            },
            {
              "p": "/test/examples",
              "t": "d",
              "c": [
                {
                  "p": "/test/examples/logging-mocks-example.test.ts",
                  "t": "f",
                  "d": "Пример использования моков для логирования"
                },
                {
                  "p": "/test/examples/telegram-token-usage.example.ts",
                  "t": "f",
                  "d": "Пример использования токена Telegram в тестах"
                }
              ]
            },
            {
              "p": "/test/fixtures",
              "t": "d",
              "c": [
                {
                  "p": "/test/fixtures/batch-data-creation.test.ts",
                  "t": "f",
                  "d": "Тесты для пакетного создания тестовых данных"
                },
                {
                  "p": "/test/fixtures/fixture-manager-optimization.test.ts",
                  "t": "f",
                  "d": "Тесты для оптимизации менеджера фикстур"
                }
              ]
            },
            {
              "p": "/test/infrastructure",
              "t": "d",
              "c": [
                {
                  "p": "/test/infrastructure/api-key.service.test.ts",
                  "t": "f",
                  "d": "Тесты для сервиса API-ключей"
                },
                {
                  "p": "/test/infrastructure/encryption.service.test.ts",
                  "t": "f",
                  "d": "Тесты для сервиса шифрования"
                },
                {
                  "p": "/test/infrastructure/infrastructure.integration.test.ts",
                  "t": "f",
                  "d": "Интеграционные тесты для инфраструктурного модуля"
                }
              ]
            },
            {
              "p": "/test/integration",
              "t": "d",
              "c": [
                {
                  "p": "/test/integration/character-service.integration.test.ts",
                  "t": "f",
                  "d": "Интеграционные тесты для CharacterService"
                },
                {
                  "p": "/test/integration/character-workflow.integration.test.ts",
                  "t": "f",
                  "d": "Сквозные тесты для всего рабочего процесса персонажа"
                },
                {
                  "p": "/test/integration/dialog-auto-mock.integration.test.ts",
                  "t": "f",
                  "d": "Тесты для автоматического мокирования в диалогах"
                },
                {
                  "p": "/test/integration/emotional-behavior-workflow.integration.test.ts",
                  "t": "f",
                  "d": "Сквозные тесты для рабочего процесса эмоционального поведения"
                },
                {
                  "p": "/test/integration/id-types-compatibility.integration.test.ts",
                  "t": "f",
                  "d": "Тесты на совместимость типов ID (UUID/number)"
                },
                {
                  "p": "/test/integration/manipulation-techniques-workflow.integration.test.ts",
                  "t": "f",
                  "d": "Сквозные тесты для рабочего процесса манипулятивных техник"
                },
                {
                  "p": "/test/integration/memory-context-workflow.integration.test.ts",
                  "t": "f",
                  "d": "Сквозные тесты для рабочего процесса памяти и контекста"
                },
                {
                  "p": "/test/integration/needs-motivation-workflow.integration.test.ts",
                  "t": "f",
                  "d": "Сквозные тесты для рабочего процесса потребностей и мотиваций"
                },
                {
                  "p": "/test/integration/specialization-workflow.integration.test.ts",
                  "t": "f",
                  "d": "Сквозные тесты для рабочего процесса специализации"
                },
                {
                  "p": "/test/integration/telegram-test.integration.test.ts",
                  "t": "f",
                  "d": "Интеграционные тесты для модуля Telegram"
                },
                {
                  "p": "/test/integration/telegram-workflow.integration.test.ts",
                  "t": "f",
                  "d": "Сквозные тесты для рабочего процесса Telegram"
                }
              ]
            },
            {
              "p": "/test/lib",
              "t": "d",
              "c": [
                {
                  "p": "/test/lib/tester",
                  "t": "d",
                  "c": [
                    {
                      "p": "/test/lib/tester/test-configurations",
                      "t": "d",
                      "c": [
                        {
                          "p": "/test/lib/tester/test-configurations/dialog-test.config.test.ts",
                          "t": "f",
                          "d": "Тесты для конфигурации тестов диалогов"
                        },
                        {
                          "p": "/test/lib/tester/test-configurations/index.test.ts",
                          "t": "f",
                          "d": "Тесты для экспорта тестовых конфигураций"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "p": "/test/llm",
              "t": "d",
              "c": [
                {
                  "p": "/test/llm/llm.service.test.ts",
                  "t": "f",
                  "d": "Тесты для LLM сервиса"
                }
              ]
            },
            {
              "p": "/test/logging",
              "t": "d",
              "c": [
                {
                  "p": "/test/logging/log.service.integration.test.ts",
                  "t": "f",
                  "d": "Интеграционные тесты для сервиса логирования"
                }
              ]
            },
            {
              "p": "/test/message-queue",
              "t": "d",
              "c": [
                {
                  "p": "/test/message-queue/message-queue.service.integration.test.ts",
                  "t": "f",
                  "d": "Интеграционные тесты для сервиса очередей сообщений"
                }
              ]
            },
            {
              "p": "/test/monitoring",
              "t": "d",
              "c": [
                {
                  "p": "/test/monitoring/monitoring.service.integration.test.ts",
                  "t": "f",
                  "d": "Интеграционные тесты для сервиса мониторинга"
                },
                {
                  "p": "/test/monitoring/monitoring.service.test.ts",
                  "t": "f",
                  "d": "Модульные тесты для сервиса мониторинга"
                }
              ]
            },
            {
              "p": "/test/prompt-template",
              "t": "d",
              "c": [
                {
                  "p": "/test/prompt-template/prompt-template.service.integration.test.ts",
                  "t": "f",
                  "d": "Интеграционные тесты для сервиса шаблонов промптов"
                },
                {
                  "p": "/test/prompt-template/prompt-template.service.test.ts",
                  "t": "f",
                  "d": "Модульные тесты для сервиса шаблонов промптов"
                }
              ]
            },
            {
              "p": "/test/telegram",
              "t": "d",
              "c": [
                {
                  "p": "/test/telegram/telegram-core.service.integration.test.ts",
                  "t": "f",
                  "d": "Интеграционные тесты для ядра Telegram"
                },
                {
                  "p": "/test/telegram/telegram.service.test.ts",
                  "t": "f",
                  "d": "Модульные тесты для Telegram сервиса"
                }
              ]
            },
            {
              "p": "/test/user",
              "t": "d",
              "c": [
                {
                  "p": "/test/user/user.service.integration.test.ts",
                  "t": "f",
                  "d": "Интеграционные тесты для UserService"
                },
                {
                  "p": "/test/user/user.service.test.ts",
                  "t": "f",
                  "d": "Модульные тесты для UserService"
                }
              ]
            },
            {
              "p": "/test/utils",
              "t": "d",
              "c": [
                {
                  "p": "/test/utils/db-cleanup.test.ts",
                  "t": "f",
                  "d": "Тесты для утилиты очистки БД"
                },
                {
                  "p": "/test/utils/db-compatibility.test.ts",
                  "t": "f",
                  "d": "Тесты для проверки совместимости с разными БД"
                },
                {
                  "p": "/test/utils/db-connection-checker.test.ts",
                  "t": "f",
                  "d": "Тесты для проверки соединения с БД"
                },
                {
                  "p": "/test/utils/db-connection-handler.test.ts",
                  "t": "f",
                  "d": "Тесты для обработчика соединений с БД"
                },
                {
                  "p": "/test/utils/db-optimization.test.ts",
                  "t": "f",
                  "d": "Тесты для оптимизации запросов к БД"
                }
              ]
            },
            {
              "p": "/test/validation",
              "t": "d",
              "c": [
                {
                  "p": "/test/validation/validation-error-handler.service.test.ts",
                  "t": "f",
                  "d": "Тесты для обработчика ошибок валидации"
                },
                {
                  "p": "/test/validation/validation.service.integration.test.ts",
                  "t": "f",
                  "d": "Интеграционные тесты для сервиса валидации"
                },
                {
                  "p": "/test/validation/validation.service.test.ts",
                  "t": "f",
                  "d": "Модульные тесты для сервиса валидации"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  "ks": [
    {
      "n": "MockTypeOrmModule",
      "p": "/lib/tester/mocks/mock-typeorm.module.ts",
      "d": "✅ КРИТИЧЕСКИ ИСПРАВЛЕН: Теперь создает Jest-совместимые моки с jest.fn() для всех методов. Является основой тестовой среды.",
      "u": [
        "ВСЕ ТЕСТЫ"
      ]
    },
    {
      "n": "TestModuleBuilder",
      "p": "/lib/tester/utils/test-module-builder.ts",
      "d": "Строитель для создания и конфигурации тестовых модулей. Упрощает настройку тестов.",
      "u": [
        "ВСЕ ТЕСТЫ"
      ]
    },
    {
      "n": "MessageProcessingCoordinator",
      "p": "/src/character/services/message-processing-coordinator.service.ts",
      "d": "Центральный координатор, который принимает сообщение от пользователя и делегирует его анализ различным сервисам (эмоциональному, поведенческому и т.д.).",
      "u": [
        "MessageHandler"
      ]
    },
    {
      "n": "CharacterBehaviorService",
      "p": "/src/character/services/character-behavior.service.ts",
      "d": "Определяет поведение персонажа на основе его текущего состояния, потребностей и мотиваций.",
      "u": [
        "MessageProcessingCoordinator",
        "ActionFacadeService"
      ]
    },
    {
      "n": "LlmService",
      "p": "/src/llm/services/llm.service.ts",
      "d": "Единая точка для взаимодействия с моделями LLM. Абстрагирует логику работы с различными провайдерами.",
      "u": [
        "Все сервисы, генерирующие текст"
      ]
    },
    {
      "n": "TelegramService",
      "p": "/src/telegram/telegram.service.ts",
      "d": "Основной сервис для взаимодействия с Telegram Bot API, отправки сообщений и обработки команд.",
      "u": [
        "TelegramCoreService",
        "MessageHandler",
        "CommandHandler"
      ]
    },
    {
      "n": "NeedsService",
      "p": "/src/character/services/needs.service.ts",
      "d": "✅ ЧАСТИЧНО ИСПРАВЛЕН: Управляет многофакторной моделью потребностей персонажа. Исправлены зависимости и ошибки компиляции, связанные с этим сервисом. Тесты, связанные с EmotionalStateService, теперь проходят.",
      "u": [
        "CharacterBehaviorService",
        "EmotionalStateService",
        "ManipulationService"
      ]
    },
    {
      "n": "EmotionalStateService",
      "p": "/src/character/services/emotional-state.service.ts",
      "d": "✅ ИСПРАВЛЕН: Управляет эмоциональным состоянием и плавными переходами. Зависит от NeedsService для корректной реакции на фрустрацию. Все тесты проходят.",
      "u": [
        "CharacterBehaviorService",
        "ManipulationService"
      ]
    },
    {
      "n": "ManipulationService",
      "p": "/src/character/services/manipulation.service.ts",
      "d": "⚠️ ЧАСТИЧНО РАБОТАЕТ: Реализует логику выбора и применения манипулятивных техник. 3 теста не проходят.",
      "u": [
        "CharacterBehaviorService"
      ]
    }
  ],
  "al": [
    {
      "s": "TelegramUpdate",
      "t": "MessageHandler / CommandHandler",
      "d": "Получает обновления от Telegram и направляет их в соответствующие обработчики."
    },
    {
      "s": "MessageHandler",
      "t": "MessageProcessingCoordinator",
      "d": "Передает текстовое сообщение на комплексный анализ."
    },
    {
      "s": "MessageProcessingCoordinator",
      "t": "CharacterBehaviorService",
      "d": "Передает результаты анализа для определения ответного действия/сообщения."
    },
    {
      "s": "CharacterBehaviorService",
      "t": "LlmService",
      "d": "Запрашивает генерацию ответа на основе полного контекста (эмоции, потребности, специализация)."
    },
    {
      "s": "ManipulationService",
      "t": "TechniqueExecutorService",
      "d": "Делегирует фактическое выполнение выбранной манипулятивной техники."
    },
    {
      "s": "EmotionalStateService",
      "t": "NeedsService",
      "d": "Использует данные о потребностях для корректировки эмоционального состояния."
    },
    {
      "s": "TestModuleBuilder",
      "t": "MockTypeOrmModule",
      "d": "Использует моки репозиториев для создания изолированной тестовой среды."
    }
  ],
  "mh": {
    "AppModule": {
      "p": "/src",
      "c": [],
      "s": [],
      "ent": [],
      "dto": [],
      "if": [],
      "i": [
        "AuthModule",
        "UserModule",
        "CharacterModule",
        "DialogModule",
        "LlmModule",
        "TelegramModule",
        "CommonModule",
        "LoggingModule",
        "CacheModule",
        "MessageQueueModule",
        "MonitoringModule",
        "PromptTemplateModule",
        "InfrastructureModule",
        "ValidationModule"
      ]
    },
    "AuthModule": {
      "p": "/src/auth",
      "c": [
        "AuthController"
      ],
      "s": [
        "AuthService"
      ],
      "ent": [],
      "dto": [
        "LoginDto",
        "RegisterDto"
      ],
      "if": [
        "JwtPayload"
      ],
      "st": [
        "JwtStrategy"
      ],
      "g": [
        "JwtAuthGuard"
      ],
      "dec": [
        "User"
      ]
    },
    "CacheModule": {
      "p": "/src/cache",
      "s": [
        "CacheService"
      ],
      "if": [
        "ICacheService"
      ]
    },
    "CharacterModule": {
      "p": "/src/character",
      "i": [
        "ContextCompressionModule",
        "MessageProcessingModule",
        "StoryModule"
      ],
      "c": [
        "CharacterController",
        "StoryController"
      ],
      "s": [
        "ActionExecutorService",
        "ActionFacadeService",
        "ActionGeneratorService",
        "ActionLifecycleService",
        "ActionResourceService",
        "ActionSchedulerService",
        "ActionService",
        "BehaviorPatternService",
        "CharacterBehaviorService",
        "CharacterManagementService",
        "CharacterMonitoringService",
        "CharacterResponseService",
        "CharacterSchedulerService",
        "CharacterService",
        "ContextCompressionService",
        "EmotionalBehaviorService",
        "EmotionalStateService",
        "FrustrationManagementService",
        "ManipulationService",
        "MemoryService",
        "MessageAnalysisService",
        "MessageBehaviorService",
        "MessageProcessingCoordinator",
        "MotivationService",
        "NeedsService",
        "SpecializationService",
        "StoryService",
        "TechniqueAdapterService",
        "TechniqueAnalyzerService",
        "TechniqueExecutorService",
        "TechniqueGeneratorService",
        "TechniqueHistoryService",
        "TechniqueStrategyService",
        "TechniqueValidatorService"
      ],
      "r": [
        "CharacterRepository",
        "TechniqueExecutionRepository",
        "UserManipulationProfileRepository"
      ],
      "ent": [
        "Action",
        "Character",
        "CharacterMemory",
        "CharacterMotivation",
        "EmotionalState",
        "ManipulationTechnique",
        "Need",
        "StoryEvent",
        "StoryPlan"
      ],
      "dto": [
        "CreateCharacterDto",
        "UpdateCharacterDto",
        "UpdateNeedsDto"
      ],
      "if": [
        "MessageAnalysis",
        "BehavioralResponse",
        "PsychologicalProfile",
        "ICharacterService",
        "IEmotionalStateService",
        "IMemory",
        "INeed",
        "ITechniqueExecution"
      ],
      "en": [
        "ActionType",
        "CharacterArchetype",
        "CharacterNeedType",
        "TechniqueIntensity",
        "TechniquePhase",
        "ManipulativeTechniqueType"
      ]
    },
    "CommonModule": {
      "p": "/src/common",
      "i": [
        "GuardsModule",
        "HttpClientModule",
        "DatabaseModule",
        "ErrorHandlingModule"
      ],
      "c": [
        "ApiController"
      ],
      "s": [
        "BaseService",
        "DbConnectionHandler",
        "DbEventsHandler",
        "ErrorHandlingService"
      ],
      "dec": [
        "Retry",
        "Sanitize",
        "ValidationRule"
      ],
      "g": [
        "ApiKeyGuard",
        "RateLimitGuard",
        "RoleGuard"
      ],
      "int": [
        "SanitizeRequestInterceptor"
      ],
      "mw": [
        "ApiKeyMiddleware",
        "RequestTrackerMiddleware"
      ],
      "u": [
        "CorsValidator",
        "HeaderSanitizer",
        "PortValidator",
        "QueryUtils",
        "PatternUtils"
      ],
      "abs": [
        "EntityManager"
      ]
    },
    "DialogModule": {
      "p": "/src/dialog",
      "c": [
        "DialogController"
      ],
      "s": [
        "DialogService"
      ],
      "ent": [
        "Dialog",
        "Message"
      ],
      "dto": [
        "CreateMessageDto",
        "CreateProactiveMessageDto"
      ],
      "if": [
        "CreateDialogOptions"
      ]
    },
    "InfrastructureModule": {
      "p": "/src/infrastructure",
      "s": [
        "ApiKeyService",
        "EncryptionService"
      ]
    },
    "LlmModule": {
      "p": "/src/llm",
      "s": [
        "LlmService",
        "LlmProviderManagerService",
        "LlamaProviderService",
        "OpenAiCoreService",
        "OpenAIProviderService"
      ]
    },
    "LoggingModule": {
      "p": "/src/logging",
      "s": [
        "LogService",
        "RollbarService"
      ],
      "fil": [
        "GlobalExceptionFilter"
      ],
      "mw": [
        "HttpLoggerMiddleware"
      ]
    },
    "MessageQueueModule": {
      "p": "/src/message-queue",
      "s": [
        "MessageQueueService"
      ]
    },
    "MonitoringModule": {
      "p": "/src/monitoring",
      "c": [
        "MonitoringController",
        "OptimizerController"
      ],
      "s": [
        "MonitoringService",
        "AlertService",
        "OptimizationService"
      ],
      "ent": [
        "Alert",
        "ApiMetric",
        "MetricAggregation",
        "MetricBase",
        "OptimizerRecommendation",
        "ScalingOperation",
        "ScalingRule",
        "SystemMetric",
        "UserMetric"
      ],
      "en": [
        "HealthStatus"
      ],
      "g": [
        "PrometheusAuthGuard"
      ],
      "mw": [
        "MetricsMiddleware"
      ]
    },
    "PromptTemplateModule": {
      "p": "/src/prompt-template",
      "s": [
        "PromptTemplateService"
      ]
    },
    "TelegramModule": {
      "p": "/src/telegram",
      "upd": [
        "TelegramUpdate"
      ],
      "s": [
        "TelegramService",
        "AccessControlService",
        "CharacterCreationService",
        "KeyboardFormatterService",
        "MessageFormatterService",
        "TelegramMessageService",
        "TelegramCoreService",
        "TelegramInitializationService",
        "TelegramUserService"
      ],
      "h": [
        "BaseHandler",
        "CallbackHandler",
        "CommandHandler",
        "MessageHandler"
      ],
      "prov": [
        "telegramBotProvider"
      ],
      "ent": [
        "CharacterSettings"
      ],
      "dec": [
        "AccessCheck",
        "HandleTelegramError",
        "InjectBot",
        "MeasureExecution",
        "OnMessage",
        "OnCommand",
        "OnCallbackQuery"
      ],
      "if": [
        "ICharacterSettings",
        "Context"
      ]
    },
    "UserModule": {
      "p": "/src/user",
      "c": [
        "UserController"
      ],
      "s": [
        "UserService"
      ],
      "ent": [
        "AccessKey",
        "PsychologicalTest",
        "User"
      ],
      "dto": [
        "CreateUserDto",
        "UpdateUserDto"
      ]
    },
    "ValidationModule": {
      "p": "/src/validation",
      "s": [
        "ValidationService",
        "ValidationErrorHandler"
      ],
      "pip": [
        "GlobalValidationPipe"
      ],
      "rul": [
        "standardRules"
      ],
      "tr": [
        "message-transformers"
      ]
    },
    "TesterLib": {
      "p": "/lib/tester",
      "bld": [
        "TestModuleBuilder"
      ],
      "fix": [
        "FixtureManager"
      ],
      "ut": [
        "createTestSuite",
        "TestDataSource",
        "cleanupDatabase",
        "checkDbCompatibility",
        "DbConnectionChecker",
        "TestDbConnectionHandler",
        "TestDbConnectionManager",
        "optimizeTestDatabase",
        "convertId",
        "createMockDataSource",
        "TestModuleBuilder"
      ],
      "cfg": [
        "DialogTestConfig",
        "LlmTestConfiguration",
        "LoggingTestConfiguration",
        "TelegramTestConfig"
      ],
      "mck": [
        "MockConfigService",
        "MockEventEmitter",
        "MockLlamaProvider",
        "MockLlmService",
        "MockLogService",
        "MockMemoryService",
        "createIntegrationTestDataSource",
        "MockDialogRepositoryModule",
        "MockInfrastructureModule",
        "MockLoggingModule",
        "MockMonitoringModule",
        "createMockProvider",
        "MockTelegramModule",
        "MockTypeOrmModule",
        "MockNeedsService",
        "MockRollbarService",
        "MockTelegrafTokenModule",
        "mockTelegrafProvider",
        "MockTelegramService",
        "MockUserService"
      ]
    }
  }
}