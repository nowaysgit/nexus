{
  "p": {
    "d": {
      "p": "/",
      "t": "d",
      "c": [
        {
          "p": "/src",
          "t": "d",
          "c": [
            {
              "p": "/app.module.ts",
              "t": "f",
              "e": ["AppModule"],
              "d": "Основной модуль приложения"
            },
            {
              "p": "/main.ts",
              "t": "f",
              "e": ["bootstrap"],
              "d": "Точка входа в приложение"
            },
            {
              "p": "/character",
              "t": "d",
              "c": [
                {
                  "p": "/character.module.ts",
                  "t": "f",
                  "e": ["CharacterModule"],
                  "d": "Модуль персонажей"
                },
                {
                  "p": "/services",
                  "t": "d",
                  "c": [
                    {
                      "p": "/action-executor.service.ts",
                      "t": "f",
                      "e": ["ActionExecutorService"],
                      "d": "Координирующий сервис для управления действиями персонажей - основной интерфейс"
                    },
                    {
                      "p": "/action-lifecycle.service.ts",
                      "t": "f",
                      "e": ["ActionLifecycleService"],
                      "d": "Сервис управления жизненным циклом действий"
                    },
                    {
                      "p": "/action-scheduler.service.ts",
                      "t": "f",
                      "e": ["ActionSchedulerService"],
                      "d": "Сервис планирования и управления расписанием действий"
                    },
                    {
                      "p": "/action-generator.service.ts",
                      "t": "f",
                      "e": ["ActionGeneratorService"],
                      "d": "Сервис генерации действий на основе триггеров"
                    },
                    {
                      "p": "/action-resource.service.ts",
                      "t": "f",
                      "e": ["ActionResourceService"],
                      "d": "Сервис управления ресурсами действий"
                    },
                    {
                      "p": "/action.service.ts",
                      "t": "f",
                      "e": ["ActionService"],
                      "d": "Фасад для обратной совместимости - делегирует в ActionExecutorService"
                    },
                    {
                      "p": "/technique-executor.service.ts",
                      "t": "f",
                      "e": ["TechniqueExecutorService"],
                      "d": "Координирующий сервис для выполнения манипулятивных техник"
                    },
                    {
                      "p": "/technique-strategy.service.ts",
                      "t": "f",
                      "e": ["TechniqueStrategyService"],
                      "d": "Сервис управления стратегиями выполнения техник"
                    },
                    {
                      "p": "/technique-validator.service.ts",
                      "t": "f",
                      "e": ["TechniqueValidatorService"],
                      "d": "Сервис валидации выполнения техник"
                    },
                    {
                      "p": "/technique-analyzer.service.ts",
                      "t": "f",
                      "e": ["TechniqueAnalyzerService"],
                      "d": "Сервис анализа результатов техник"
                    },
                    {
                      "p": "/technique-generator.service.ts",
                      "t": "f",
                      "e": ["TechniqueGeneratorService"],
                      "d": "Сервис генерации техник"
                    },
                    {
                      "p": "/technique-history.service.ts",
                      "t": "f",
                      "e": ["TechniqueHistoryService"],
                      "d": "Сервис истории выполнения техник"
                    },
                    {
                      "p": "/technique-adapter.service.ts",
                      "t": "f",
                      "e": ["TechniqueAdapterService"],
                      "d": "Сервис адаптации техник под контекст"
                    },
                    {
                      "p": "/character-behavior.service.ts",
                      "t": "f",
                      "e": ["CharacterBehaviorService"],
                      "d": "Основной сервис поведения персонажей"
                    },
                    {
                      "p": "/emotional-behavior.service.ts",
                      "t": "f",
                      "e": ["EmotionalBehaviorService"],
                      "d": "Сервис эмоционального поведения"
                    },
                    {
                      "p": "/message-processing-coordinator.service.ts",
                      "t": "f",
                      "e": ["MessageProcessingCoordinatorService"],
                      "d": "Координатор обработки сообщений"
                    }
                  ]
                }
              ]
            },
            {
              "p": "/common",
              "t": "d",
              "c": [
                {
                  "p": "/utils",
                  "t": "d",
                  "c": [
                    {
                      "p": "/error.utils.ts",
                      "t": "f",
                      "e": ["getErrorMessage"],
                      "d": "Утилиты обработки ошибок - внедрены в production код"
                    },
                    {
                      "p": "/error-handling",
                      "t": "d",
                      "c": [
                        {
                          "p": "/error-handling.service.ts",
                          "t": "f",
                          "e": ["ErrorHandlingService"],
                          "d": "Унифицированный сервис обработки ошибок"
                        },
                        {
                          "p": "/error-handling.utils.ts",
                          "t": "f",
                          "e": ["withErrorHandling"],
                          "d": "Утилиты обработки ошибок без DI"
                        }
                      ]
                    }
                  ]
                },
                {
                  "p": "/abstractions",
                  "t": "d",
                  "c": [
                    {
                      "p": "/pattern-utils.ts",
                      "t": "f",
                      "e": ["getErrorMessage", "createNotFoundError", "ErrorPatternHandler"],
                      "d": "Утилиты паттернов и обработки ошибок - внедрены в production"
                    }
                  ]
                },
                {
                  "p": "/base",
                  "t": "d",
                  "c": [
                    {
                      "p": "/base.service.ts",
                      "t": "f",
                      "e": ["BaseService"],
                      "d": "Базовый класс для всех сервисов"
                    }
                  ]
                }
              ]
            },
            {
              "p": "/telegram",
              "t": "d",
              "c": [
                {
                  "p": "/handlers",
                  "t": "d",
                  "c": [
                    {
                      "p": "/callback.handler.ts",
                      "t": "f",
                      "e": ["CallbackHandler"],
                      "d": "Обработчик callback запросов - использует getErrorMessage"
                    },
                    {
                      "p": "/message.handler.ts",
                      "t": "f",
                      "e": ["MessageHandler"],
                      "d": "Обработчик сообщений - использует getErrorMessage"
                    },
                    {
                      "p": "/command.handler.ts",
                      "t": "f",
                      "e": ["CommandHandler"],
                      "d": "Обработчик команд - использует getErrorMessage"
                    }
                  ]
                },
                {
                  "p": "/services",
                  "t": "d",
                  "c": [
                    {
                      "p": "/message.service.ts",
                      "t": "f",
                      "e": ["MessageService"],
                      "d": "Сервис сообщений - использует getErrorMessage"
                    },
                    {
                      "p": "/telegram.service.ts",
                      "t": "f",
                      "e": ["TelegramService"],
                      "d": "Основной сервис Telegram - использует getErrorMessage"
                    },
                    {
                      "p": "/telegram-core.service.ts",
                      "t": "f",
                      "e": ["TelegramCoreService"],
                      "d": "Ядро Telegram сервиса - использует getErrorMessage"
                    }
                  ]
                }
              ]
            },
            {
              "p": "/monitoring",
              "t": "d",
              "c": [
                {
                  "p": "/monitoring.service.ts",
                  "t": "f",
                  "e": ["MonitoringService"],
                  "d": "Сервис мониторинга - использует getErrorMessage"
                }
              ]
            },
            {
              "p": "/validation",
              "t": "d",
              "c": [
                {
                  "p": "/services",
                  "t": "d",
                  "c": [
                    {
                      "p": "/validation.service.ts",
                      "t": "f",
                      "e": ["ValidationService"],
                      "d": "Сервис валидации - использует getErrorMessage"
                    },
                    {
                      "p": "/validation-error-handler.service.ts",
                      "t": "f",
                      "e": ["ValidationErrorHandlerService"],
                      "d": "Обработчик ошибок валидации - использует getErrorMessage"
                    }
                  ]
                }
              ]
            },
            {
              "p": "/message-queue",
              "t": "d",
              "c": [
                {
                  "p": "/message-queue.service.ts",
                  "t": "f",
                  "e": ["MessageQueueService"],
                  "d": "Сервис очереди сообщений - использует getErrorMessage"
                }
              ]
            }
          ]
        },
        {
          "p": "/lib/tester",
          "t": "d",
          "c": [
            {
              "p": "/index.ts",
              "t": "f",
              "e": ["createTestSuite", "createTest", "TestConfigType"],
              "d": "Основной интерфейс тестовой библиотеки"
            },
            {
              "p": "/fixtures/fixture-manager.ts",
              "t": "f",
              "e": ["FixtureManager"],
              "d": "Менеджер фикстур для тестов"
            }
          ]
        }
      ]
    }
  },
  "ks": [
    {
      "n": "ActionExecutorService",
      "p": "/src/character/services/action-executor.service.ts",
      "d": "Координирующий сервис для управления действиями персонажей - основной интерфейс после рефакторинга",
      "u": ["CharacterBehaviorService", "EmotionalBehaviorService", "MessageProcessingCoordinatorService"]
    },
    {
      "n": "ActionLifecycleService",
      "p": "/src/character/services/action-lifecycle.service.ts",
      "d": "Специализированный сервис управления жизненным циклом действий",
      "u": ["ActionExecutorService", "ActionService"]
    },
    {
      "n": "ActionSchedulerService",
      "p": "/src/character/services/action-scheduler.service.ts",
      "d": "Специализированный сервис планирования действий",
      "u": ["ActionExecutorService", "ActionService"]
    },
    {
      "n": "ActionGeneratorService",
      "p": "/src/character/services/action-generator.service.ts",
      "d": "Специализированный сервис генерации действий",
      "u": ["ActionExecutorService", "ActionService"]
    },
    {
      "n": "ActionResourceService",
      "p": "/src/character/services/action-resource.service.ts",
      "d": "Специализированный сервис управления ресурсами действий",
      "u": ["ActionExecutorService", "ActionService"]
    },
    {
      "n": "TechniqueExecutorService",
      "p": "/src/character/services/technique-executor.service.ts",
      "d": "Координирующий сервис для выполнения манипулятивных техник",
      "u": ["ManipulationService"]
    },
    {
      "n": "TechniqueStrategyService",
      "p": "/src/character/services/technique-strategy.service.ts",
      "d": "Сервис управления стратегиями выполнения техник",
      "u": ["TechniqueExecutorService"]
    },
    {
      "n": "TechniqueValidatorService",
      "p": "/src/character/services/technique-validator.service.ts",
      "d": "Сервис валидации выполнения техник",
      "u": ["TechniqueExecutorService"]
    },
    {
      "n": "TechniqueAnalyzerService",
      "p": "/src/character/services/technique-analyzer.service.ts",
      "d": "Сервис анализа результатов техник",
      "u": ["TechniqueExecutorService"]
    },
    {
      "n": "TechniqueGeneratorService",
      "p": "/src/character/services/technique-generator.service.ts",
      "d": "Сервис генерации техник",
      "u": ["TechniqueExecutorService"]
    },
    {
      "n": "TechniqueHistoryService",
      "p": "/src/character/services/technique-history.service.ts",
      "d": "Сервис истории выполнения техник",
      "u": ["TechniqueExecutorService"]
    },
    {
      "n": "TechniqueAdapterService",
      "p": "/src/character/services/technique-adapter.service.ts",
      "d": "Сервис адаптации техник под контекст",
      "u": ["TechniqueExecutorService"]
    },
    {
      "n": "getErrorMessage",
      "p": "/src/common/utils/error.utils.ts",
      "d": "Утилита безопасного извлечения сообщений ошибок - внедрена в 15+ файлов production кода",
      "u": ["CallbackHandler", "MessageHandler", "CommandHandler", "MessageService", "TelegramService", "TelegramCoreService", "MonitoringService", "ValidationService", "ValidationErrorHandlerService", "MessageQueueService"]
    },
    {
      "n": "ErrorHandlingService",
      "p": "/src/common/utils/error-handling/error-handling.service.ts",
      "d": "Унифицированный сервис обработки ошибок",
      "u": ["BaseService"]
    },
    {
      "n": "BaseService",
      "p": "/src/common/base/base.service.ts",
      "d": "Базовый класс для всех сервисов с унифицированной обработкой ошибок",
      "u": ["ActionExecutorService", "ActionLifecycleService", "ActionSchedulerService", "ActionGeneratorService", "ActionResourceService", "TechniqueExecutorService", "TechniqueStrategyService"]
    }
  ],
  "al": [
    {
      "s": "ActionExecutorService",
      "t": "ActionLifecycleService",
      "d": "Управление жизненным циклом"
    },
    {
      "s": "ActionExecutorService",
      "t": "ActionSchedulerService", 
      "d": "Планирование действий"
    },
    {
      "s": "ActionExecutorService",
      "t": "ActionGeneratorService",
      "d": "Генерация действий"
    },
    {
      "s": "ActionExecutorService",
      "t": "ActionResourceService",
      "d": "Управление ресурсами"
    },
    {
      "s": "TechniqueExecutorService",
      "t": "TechniqueStrategyService",
      "d": "Получение стратегий техник"
    },
    {
      "s": "TechniqueExecutorService",
      "t": "TechniqueValidatorService",
      "d": "Валидация техник"
    },
    {
      "s": "TechniqueExecutorService",
      "t": "TechniqueAnalyzerService",
      "d": "Анализ результатов"
    },
    {
      "s": "AllServices",
      "t": "BaseService",
      "d": "Наследование базового функционала"
    },
    {
      "s": "ProductionCode",
      "t": "getErrorMessage",
      "d": "Унифицированная обработка ошибок"
    }
  ],
  "mh": {
    "CharacterModule": {
      "p": "/src/character",
      "c": ["CharacterController", "StoryController"],
      "s": [
        "ActionExecutorService",
        "ActionLifecycleService", 
        "ActionSchedulerService",
        "ActionGeneratorService",
        "ActionResourceService",
        "ActionService",
        "TechniqueExecutorService",
        "TechniqueStrategyService",
        "TechniqueValidatorService",
        "TechniqueAnalyzerService",
        "TechniqueGeneratorService",
        "TechniqueHistoryService",
        "TechniqueAdapterService",
        "CharacterBehaviorService",
        "EmotionalBehaviorService",
        "MessageProcessingCoordinatorService",
        "CharacterService",
        "NeedsService",
        "MemoryService",
        "ManipulationService"
      ],
      "i": ["ActionType", "CharacterNeedType", "ManipulativeTechniqueType"],
      "st": ["ITechniqueExecutionStrategy"],
      "dto": ["CreateCharacterDto", "UpdateNeedsDto"],
      "if": ["ActionHandler", "ITechniqueContext", "ITechniqueResult", "ActionContext", "ActionResult"],
      "g": [],
      "dec": [],
      "mw": [],
      "u": [],
      "ent": ["Character", "Action", "Need", "TechniqueExecution"],
      "en": ["ActionType", "CharacterNeedType", "ManipulativeTechniqueType", "TechniqueIntensity"]
    },
    "CommonModule": {
      "p": "/src/common",
      "c": [],
      "s": ["BaseService", "ErrorHandlingService"],
      "i": [],
      "st": [],
      "dto": [],
      "if": ["IErrorHandler"],
      "g": [],
      "dec": ["Retry", "Sanitize"],
      "mw": [],
      "u": ["getErrorMessage", "createNotFoundError", "withErrorHandling", "ErrorPatternHandler"],
      "ent": [],
      "en": []
    },
    "TelegramModule": {
      "p": "/src/telegram",
      "c": [],
      "s": ["TelegramService", "TelegramCoreService", "MessageService"],
      "i": [],
      "st": [],
      "dto": [],
      "if": [],
      "g": [],
      "dec": ["InjectBot"],
      "mw": [],
      "u": [],
      "ent": ["CharacterSettings"],
      "en": []
    },
    "ValidationModule": {
      "p": "/src/validation",
      "c": [],
      "s": ["ValidationService", "ValidationErrorHandlerService"],
      "i": [],
      "st": [],
      "dto": [],
      "if": [],
      "g": [],
      "dec": [],
      "mw": [],
      "u": [],
      "ent": [],
      "en": []
    },
    "MonitoringModule": {
      "p": "/src/monitoring",
      "c": [],
      "s": ["MonitoringService"],
      "i": [],
      "st": [],
      "dto": [],
      "if": [],
      "g": [],
      "dec": [],
      "mw": [],
      "u": [],
      "ent": [],
      "en": []
    },
    "MessageQueueModule": {
      "p": "/src/message-queue",
      "c": [],
      "s": ["MessageQueueService"],
      "i": [],
      "st": [],
      "dto": [],
      "if": [],
      "g": [],
      "dec": [],
      "mw": [],
      "u": [],
      "ent": [],
      "en": []
    }
  }
}

