#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞ –æ –ø–æ–∫—Ä—ã—Ç–∏–∏
 * –ó–∞–ø—É—Å–∫: node scripts/run-all-tests.js
 */

const { execSync } = require('child_process');
const path = require('path');
const fs = require('fs');

console.log('üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞ —Å –æ—Ç—á–µ—Ç–æ–º –æ –ø–æ–∫—Ä—ã—Ç–∏–∏');

try {
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Ç–µ—Å—Ç–æ–≤–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    execSync('node scripts/check-db-connection.js', {
        stdio: 'inherit',
        env: { ...process.env, NODE_ENV: 'test' }
    });
    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é');

    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–∏–ø–æ–≤
    console.log('\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ TypeScript...');
    execSync('npx tsc --noEmit', {
        stdio: 'inherit',
        env: { ...process.env, NODE_ENV: 'test' }
    });
    console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω–∞');

    // –ó–∞–ø—É—Å–∫–∞–µ–º —é–Ω–∏—Ç-—Ç–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º
    console.log('\nüìã –ó–∞–ø—É—Å–∫ —é–Ω–∏—Ç-—Ç–µ—Å—Ç–æ–≤...');
    const unitOptions = [
        '--coverage',
        '--coverageReporters=text',
        '--coverageReporters=lcov',
        '--coverageDirectory=coverage/unit',
        '--testPathIgnorePatterns=.*\\.integration\\.test\\.ts$',
        '--testPathIgnorePatterns=.*\\.e2e\\.test\\.ts$'
    ];

    console.log(`‚úì –ó–∞–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥—ã: jest ${unitOptions.join(' ')}`);

    try {
        execSync(`jest ${unitOptions.join(' ')}`, {
            stdio: 'inherit',
            env: { ...process.env, NODE_ENV: 'test' }
        });
        console.log('‚úÖ –Æ–Ω–∏—Ç-—Ç–µ—Å—Ç—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã');
    } catch (error) {
        console.error('‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —é–Ω–∏—Ç-—Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏');
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞, —á—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã
    }

    // –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º
    console.log('\nüìã –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤...');
    const integrationOptions = [
        '--coverage',
        '--coverageReporters=text',
        '--coverageReporters=lcov',
        '--coverageDirectory=coverage/integration',
        '--testMatch=**/*.integration.test.ts',
        '--forceExit',
        '--detectOpenHandles',
        '--testTimeout=30000',
        '--config=jest.integration.config.js'
    ];

    console.log(`‚úì –ó–∞–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥—ã: jest ${integrationOptions.join(' ')}`);

    try {
        execSync(`jest ${integrationOptions.join(' ')}`, {
            stdio: 'inherit',
            env: { ...process.env, NODE_ENV: 'test' }
        });
        console.log('‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã');
    } catch (error) {
        console.error('‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏');
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    }

    // –û–±—ä–µ–¥–∏–Ω—è–µ–º –æ—Ç—á–µ—Ç—ã –æ –ø–æ–∫—Ä—ã—Ç–∏–∏ (–µ—Å–ª–∏ —Ç–∞–∫–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –µ—Å—Ç—å)
    console.log('\nüìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –æ –ø–æ–∫—Ä—ã—Ç–∏–∏...');
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ nyc –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –æ—Ç—á–µ—Ç–æ–≤
        execSync('npx nyc --version', { stdio: 'ignore' });

        // –û–±—ä–µ–¥–∏–Ω—è–µ–º –æ—Ç—á–µ—Ç—ã —Å –ø–æ–º–æ—â—å—é nyc
        execSync('npx nyc merge coverage/unit coverage/merged-report.json', { stdio: 'inherit' });
        execSync('npx nyc merge coverage/integration coverage/merged-integration.json', { stdio: 'inherit' });
        execSync('npx nyc merge coverage coverage/final-report.json', { stdio: 'inherit' });
        execSync('npx nyc report --reporter=text --reporter=lcov --temp-dir=coverage', { stdio: 'inherit' });

        console.log('‚úÖ –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π –æ—Ç—á–µ—Ç –æ –ø–æ–∫—Ä—ã—Ç–∏–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω');
    } catch (error) {
        console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π –æ—Ç—á–µ—Ç –æ –ø–æ–∫—Ä—ã—Ç–∏–∏. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–∞–∫–µ—Ç nyc');
        console.warn('   –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ nyc –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: npm install -g nyc');
    }

    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã! –û—Ç—á–µ—Ç—ã –æ –ø–æ–∫—Ä—ã—Ç–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ coverage/');
} catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤:', error.message);
    process.exit(1);
} 