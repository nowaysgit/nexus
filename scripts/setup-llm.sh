#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ LLM –æ–∫—Ä—É–∂–µ–Ω–∏—è
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Llama 4 –º–æ–¥–µ–ª–µ–π

set -e

echo "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ LLM –æ–∫—Ä—É–∂–µ–Ω–∏—è..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
    exit 1
fi

if ! docker compose version &> /dev/null; then
    echo "‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –º–æ–¥–µ–ª–µ–π
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p models
mkdir -p logs/llm

# –ö–æ–ø–∏—Ä—É–µ–º environment —Ñ–∞–π–ª—ã
echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
if [ ! -f .env.local ]; then
    cp .env.local.llm .env.local
    echo "‚úÖ –°–æ–∑–¥–∞–Ω .env.local —Ñ–∞–π–ª"
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º LLM —Å–µ—Ä–≤–∏—Å—ã
echo "üê≥ –ó–∞–ø—É—Å–∫ LLM —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker compose -f docker-compose.llm.yml up -d ollama redis-llm

# –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Ollama..."
timeout 120s bash -c 'until curl -f http://localhost:11434/api/tags 2>/dev/null; do sleep 5; done'

# –°–∫–∞—á–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥–µ–ª–∏
echo "üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ Llama 4 –º–æ–¥–µ–ª–µ–π..."
echo "–°–∫–∞—á–∏–≤–∞–Ω–∏–µ llama3.2:3b (–æ—Å–Ω–æ–≤–Ω–∞—è –º–æ–¥–µ–ª—å)..."
curl -X POST http://localhost:11434/api/pull \
  -H "Content-Type: application/json" \
  -d '{"name": "llama3.2:3b"}' \
  --progress-bar

echo "–°–∫–∞—á–∏–≤–∞–Ω–∏–µ llama3.2:1b (–æ–±–ª–µ–≥—á–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è —Ç–µ—Å—Ç–æ–≤)..."
curl -X POST http://localhost:11434/api/pull \
  -H "Content-Type: application/json" \
  -d '{"name": "llama3.2:1b"}' \
  --progress-bar

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏
echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π..."
curl -s http://localhost:11434/api/tags | jq '.models[].name' || echo "–ú–æ–¥–µ–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã (jq –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)"

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É LLM
echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ LLM..."
TEST_RESPONSE=$(curl -s -X POST http://localhost:11434/api/generate \
  -H "Content-Type: application/json" \
  -d '{
    "model": "llama3.2:3b",
    "prompt": "Hello, test",
    "stream": false,
    "options": {"num_predict": 10}
  }')

if echo "$TEST_RESPONSE" | grep -q "response"; then
    echo "‚úÖ LLM —Ç–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!"
else
    echo "‚ùå LLM —Ç–µ—Å—Ç –Ω–µ —É–¥–∞–ª—Å—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏."
    exit 1
fi

echo ""
echo "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
echo ""
echo "üìù –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  yarn llm:start     - –ó–∞–ø—É—Å—Ç–∏—Ç—å LLM —Å–µ—Ä–≤–∏—Å—ã"
echo "  yarn llm:stop      - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å LLM —Å–µ—Ä–≤–∏—Å—ã"
echo "  yarn llm:test      - –ó–∞–ø—É—Å—Ç–∏—Ç—å LLM —Ç–µ—Å—Ç—ã"
echo "  yarn llm:models    - –ü–æ–∫–∞–∑–∞—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏"
echo ""
echo "üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:"
echo "  http://localhost:8080 - Ollama Web UI (–∑–∞–ø—É—Å—Ç–∏—Ç–µ: docker compose -f docker-compose.llm.yml --profile dev up ollama-webui)"
echo ""
echo "üìä Endpoints:"
echo "  http://localhost:11434 - Ollama API"
echo "  http://localhost:6380  - Redis –¥–ª—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è"
